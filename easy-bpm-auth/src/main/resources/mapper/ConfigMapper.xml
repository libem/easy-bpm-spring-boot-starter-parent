<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pig.easy.bpm.auth.mapper.ConfigMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.pig.easy.bpm.auth.entity.ConfigDO">
        <id column="config_id" property="configId"/>
        <result column="config_code" property="configCode"/>
        <result column="config_name" property="configName"/>
        <result column="template_id" property="templateId"/>
        <result column="config_key" property="configKey"/>
        <result column="config_value" property="configValue"/>
        <result column="config_type" property="configType"/>
        <result column="tenant_id" property="tenantId"/>
        <result column="remarks" property="remarks"/>
        <result column="valid_state" property="validState"/>
        <result column="operator_id" property="operatorId"/>
        <result column="operator_name" property="operatorName"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        `config_id`,
        `config_code`,
        `config_name`,
        `template_id`,
        `config_key`,
        `config_value`,
        `config_type`,
        `tenant_id`,
        `remarks`,
        `valid_state`,
        `operator_id`,
        `operator_name`,
        `create_time`,
        `update_time`
        <!--
                config_id, config_code, config_name, template_id, config_key, config_value, config_type, tenant_id, remarks, valid_state, operator_id, operator_name, create_time, update_time
        -->
    </sql>

    <select id="getListByCondition" parameterType="com.pig.easy.bpm.auth.dto.request.ConfigQueryDTO"
            resultType="com.pig.easy.bpm.auth.dto.response.ConfigDTO">
        select
        <include refid="Base_Column_List"/>
        from
        bpm_config t
        where
        1 = 1
        <if test="configId != null and configId > 0">
            and t.config_id = #{configId}
        </if>

        <if test="configCode != null and configCode != ''">
            and t.config_code like concat('%',#{configCode},'%')
        </if>

        <if test="configName != null and configName != ''">
            and t.config_name like concat('%',#{configName},'%')
        </if>

        <if test="templateId != null and templateId > 0">
            and t.template_id = #{templateId}
        </if>

        <if test="configKey != null and configKey != ''">
            and t.config_key like concat('%',#{configKey},'%')
        </if>

        <if test="configValue != null and configValue != ''">
            and t.config_value = #{configValue}
        </if>

        <if test="configType != null and configType != ''">
            and t.config_type = #{configType}
        </if>

        <if test="tenantId != null and tenantId != ''">
            and t.tenant_id = #{tenantId}
        </if>

        <if test="remarks != null and remarks != ''">
            and t.remarks = #{remarks}
        </if>

        <if test="validState != null and validState >= 0">
            and t.valid_state = #{validState}
        </if>

        <if test="operatorId != null and operatorId > 0">
            and t.operator_id = #{operatorId}
        </if>

        <if test="operatorName != null and operatorName != ''">
            and t.operator_name = #{operatorName}
        </if>

        <if test="createTime != null ">
            and t.create_time = #{createTime}
        </if>

        <if test="updateTime != null ">
            and t.update_time = #{updateTime}
        </if>

    </select>


    <select id="getConfigValue" parameterType="com.pig.easy.bpm.auth.dto.request.ConfigQueryDTO"
            resultType="com.pig.easy.bpm.auth.dto.response.ConfigDTO">
        select
        <include refid="Base_Column_List"/>
        from
        bpm_config t
        where
        t.config_key = #{tenantId}
        AND t.tenant_id = #{configKey}
        AND t.valid_state = 1
        LIMIT 1
    </select>

</mapper>
