-- ----------------------------
-- Table data for code_db_config
-- ----------------------------
INSERT INTO `easy_bpm_generator`.`code_db_config` (`db_id`, `db_name`, `db_url`, `db_username`, `db_password`, `db_type`, `db_catalog`, `db_schema_name`, `db_driver_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('2', 'easy_bpm_generator', 'jdbc:mysql://120.77.218.141:3306/easy_bpm_generator?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull', 'root', '123456', 'mysql', '', 'gen', 'com.mysql.cj.jdbc.Driver', '', '', '1', '0', '', now(), now());

-- ----------------------------
-- Table data for code_table_strategy_config
-- ----------------------------
INSERT INTO `easy_bpm_generator`.`code_table_strategy_config` (`config_id`, `db_id`, `table_name`, `author`, `context_path`, `module_name`, `parent_package`, `table_prefix`, `field_prefix`, `project_path`, `vue_path`, `override`, `parent_menu_id`, `controller_name`, `service_impl_name`, `service_name`, `xml_name`, `mapper_name`, `entity_name`, `super_entity_class`, `super_mapper_class`, `super_service_class`, `super_service_impl_class`, `super_controller_class`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('1', '2', '', 'pig', '/code', '', '', 'code_', 'code_', 'E:\\work\\iedaworkspace\\project\\parent\\new 2\\spring-boot-starter-easy-bpm-parent\\generator', 'C:\\Users\\Administrator\\Downloads\\vue-admin-template-master (1)\\vue-admin-template', '1', '0', '%sController', '%sServiceImpl', '%sService', '%sMapper', '%sMapper', '%s', '', '', 'com.pig.easy.bpm.common.generator.BaseService', 'com.pig.easy.bpm.common.generator.BaseServiceImpl', '', '', '', '1', '0', '', '2021-03-08 18:33:54', '2021-03-08 18:34:11');

-- ----------------------------
-- Table data for code_template
-- ----------------------------
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('1', 'api.ftl', 'import request from \'@/utils/request\'\r\nimport apiDownLoad from \'@/utils/download\'\r\n\r\n\r\nexport function get${entity}ListPage(query) {\r\n  return request({\r\n    url: \'<#if cfg.contentPath??>${cfg.contentPath}</#if><#if package.ModuleName??>/${package.ModuleName}</#if>/${table.entityPath}/getListPage\',\r\n    method: \'post\',\r\n    data: query\r\n  })\r\n}\r\n\r\nexport function get${entity}List(query) {\r\n  return request({\r\n    url: \'<#if cfg.contentPath??>${cfg.contentPath}</#if><#if package.ModuleName??>/${package.ModuleName}</#if>/${table.entityPath}/getList\',\r\n    method: \'post\',\r\n    data: query\r\n  })\r\n}\r\n\r\nexport function save${entity}(form) {\r\n  return request({\r\n    url: \'<#if cfg.contentPath??>${cfg.contentPath}</#if><#if package.ModuleName??>/${package.ModuleName}</#if>/${table.entityPath}/insert\',\r\n    method: \'post\',\r\n    data: form\r\n  })\r\n}\r\n\r\nexport function update${entity}(form) {\r\n  return request({\r\n    url: \'<#if cfg.contentPath?? >${cfg.contentPath}</#if><#if package.ModuleName??>/${package.ModuleName}</#if>/${table.entityPath}/update\',\r\n    method: \'post\',\r\n    data: form\r\n  })\r\n}\r\n\r\nexport function deleteById(id) {\r\n  return request({\r\n    url: \'<#if cfg.contentPath??>${cfg.contentPath}</#if><#if package.ModuleName??>/${package.ModuleName}</#if>/${table.entityPath}/deleteById\',\r\n    method: \'post\',\r\n        <#list table.fields as field>\r\n            <#if field.keyFlag>\r\n    data: { \'${field.propertyName}\': id }\r\n            </#if>\r\n        </#list>\r\n  })\r\n}\r\n\r\nexport function download(query) {\r\n  return apiDownLoad(\r\n   \'<#if cfg.contentPath??>${cfg.contentPath}</#if><#if package.ModuleName??>/${package.ModuleName}</#if>/${table.entityPath}/download\',\r\n    query\r\n  )\r\n}\r\n\r\nexport function getById(id) {\r\n  return request({\r\n    url: \'<#if cfg.contentPath??>${cfg.contentPath}</#if><#if package.ModuleName??>/${package.ModuleName}</#if>/${table.entityPath}/getById\',\r\n    method: \'post\',\r\n    <#list table.fields as field>\r\n        <#if field.keyFlag>\r\n    data: { \'${field.propertyName}\': id }\r\n        </#if>\r\n    </#list>\r\n  })\r\n}\r\n', '0', '/src/api/%s.js', '/templates/api.ftl', '1', '', 'API接口1dfds', '1', '0', '', '2021-03-09 17:25:35', '2021-03-09 17:25:35');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('2', 'controller.java.ftl', 'package ${package.Controller};\r\n\r\n\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport ${cfg.voRequest}.*;\r\nimport ${cfg.dtoRequest}.*;\r\nimport ${cfg.dtoResponse}.*;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport org.apache.commons.lang3.StringUtils;\r\nimport ${package.Service}.${table.serviceName};\r\nimport javax.servlet.http.HttpServletResponse;\r\nimport java.util.List;\r\nimport javax.validation.Valid;\r\nimport com.github.pagehelper.PageInfo;\r\nimport com.pig.easy.bpm.common.entityError.EntityError;\r\nimport com.pig.easy.bpm.common.utils.BeanUtils;\r\nimport com.pig.easy.bpm.common.utils.EasyBpmAsset;\r\nimport com.pig.easy.bpm.common.utils.JsonResult;\r\nimport com.pig.easy.bpm.common.utils.Result;\r\nimport com.pig.easy.bpm.generator.converter.LocalDateTimeConverter;\r\nimport java.io.IOException;\r\nimport com.alibaba.excel.EasyExcel;\r\n\r\nimport io.swagger.annotations.ApiOperation;\r\nimport io.swagger.annotations.ApiParam;\r\nimport java.net.URLEncoder;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Controller;\r\n\r\n\r\n\r\n<#--<#if restControllerStyle>-->\r\n<#--import org.springframework.web.bind.annotation.RestController;-->\r\n<#--<#else>-->\r\n<#--import org.springframework.stereotype.Controller;-->\r\n<#--</#if>-->\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n<#if superControllerClassPackage??>\r\nimport ${superControllerClassPackage};\r\n</#if>\r\n\r\n/**\r\n * <p>\r\n * ${table.comment!} 前端控制器\r\n * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<#--<#if restControllerStyle>-->\r\n<#--@RestController-->\r\n<#--<#else>-->\r\n<#--@Controller-->\r\n<#--</#if>-->\r\n@RestController\r\n<#if swagger2>\r\n@Api(tags = \"${table.comment}管理\", value = \"${table.comment}管理\")\r\n</#if>\r\n@RequestMapping(\"<#if package.ModuleName??>/${package.ModuleName}</#if>/<#if controllerMappingHyphenStyle??>${controllerMappingHyphen}<#else>${table.entityPath}</#if>\")\r\n<#if kotlin>\r\nclass ${table.controllerName}<#if superControllerClass??> : ${superControllerClass}()</#if>\r\n<#else>\r\n<#if superControllerClass??>\r\npublic class ${table.controllerName} extends ${superControllerClass} {\r\n<#else>\r\npublic class ${table.controllerName} {\r\n</#if>\r\n\r\n    @Autowired\r\n    ${table.serviceName} service;\r\n\r\n    @ApiOperation(value = \"查询${table.comment}列表\", notes = \"查询${table.comment}列表\", produces = \"application/json\")\r\n    @PostMapping(\"/getListPage\")\r\n    public JsonResult getListPage(@Valid @RequestBody ${entity}QueryVO param) {\r\n\r\n        EasyBpmAsset.isAssetEmpty(param);\r\n        ${entity}QueryDTO queryDTO = BeanUtils.switchToDTO(param, ${entity}QueryDTO.class);\r\n\r\n        Result<PageInfo<${entity}DTO>> result = service.getListPageByCondition(queryDTO);\r\n        if (result.getEntityError().getCode() != EntityError.SUCCESS.getCode()) {\r\n            return JsonResult.error(result.getEntityError());\r\n        }\r\n        return JsonResult.success(result.getData());\r\n    }\r\n\r\n    @ApiOperation(value = \"查询${table.comment}列表\", notes = \"查询${table.comment}列表\", produces = \"application/json\")\r\n    @PostMapping(\"/getList\")\r\n    public JsonResult getList(@Valid @RequestBody ${entity}QueryVO param) {\r\n\r\n        EasyBpmAsset.isAssetEmpty(param);\r\n        ${entity}QueryDTO queryDTO = BeanUtils.switchToDTO(param, ${entity}QueryDTO.class);\r\n\r\n        Result<List<${entity}DTO>> result = service.getListByCondition(queryDTO);\r\n        if (result.getEntityError().getCode() != EntityError.SUCCESS.getCode()) {\r\n            return JsonResult.error(result.getEntityError());\r\n        }\r\n        return JsonResult.success(result.getData());\r\n    }\r\n\r\n    @ApiOperation(value = \"新增${table.comment}\", notes = \"新增${table.comment}\", produces = \"application/json\")\r\n    @PostMapping(\"/insert\")\r\n    public JsonResult insert${entity}(@Valid @RequestBody ${entity}SaveOrUpdateVO param) {\r\n\r\n        EasyBpmAsset.isAssetEmpty(param);\r\n        ${entity}SaveOrUpdateDTO saveDTO = BeanUtils.switchToDTO(param, ${entity}SaveOrUpdateDTO.class);\r\n\r\n        Result<Integer> result = service.insert${entity}(saveDTO);\r\n        if (result.getEntityError().getCode() != EntityError.SUCCESS.getCode()) {\r\n            return JsonResult.error(result.getEntityError());\r\n        }\r\n        return JsonResult.success(result.getData());\r\n    }\r\n\r\n    @ApiOperation(value = \"修改${table.comment}\", notes = \"修改${table.comment}\", produces = \"application/json\")\r\n    @PostMapping(\"/update\")\r\n    public JsonResult update${entity}(@Valid @RequestBody ${entity}SaveOrUpdateVO param) {\r\n\r\n        EasyBpmAsset.isAssetEmpty(param);\r\n        ${entity}SaveOrUpdateDTO saveDTO = BeanUtils.switchToDTO(param, ${entity}SaveOrUpdateDTO.class);\r\n\r\n        Result<Integer> result = service.update${entity}(saveDTO);\r\n        if (result.getEntityError().getCode() != EntityError.SUCCESS.getCode()) {\r\n          return JsonResult.error(result.getEntityError());\r\n        }\r\n        return JsonResult.success(result.getData());\r\n    }\r\n\r\n    <#list table.fields as field>\r\n        <#if field.keyFlag>\r\n    @ApiOperation(value = \"删除${table.comment}\", notes = \"删除${table.comment}\", produces = \"application/json\")\r\n    @PostMapping(\"/deleteById\")\r\n    public JsonResult deleteById(@Valid @RequestBody ${entity}SaveOrUpdateVO param) {\r\n\r\n        EasyBpmAsset.isAssetEmpty(param);\r\n        ${entity}SaveOrUpdateDTO saveDTO = BeanUtils.switchToDTO(param, ${entity}SaveOrUpdateDTO.class);\r\n        saveDTO.setValidState(0);\r\n\r\n        Result<Integer> result = service.delete${entity}(saveDTO);\r\n        if (result.getEntityError().getCode() != EntityError.SUCCESS.getCode()) {\r\n            return JsonResult.error(result.getEntityError());\r\n        }\r\n        return JsonResult.success(result.getData());\r\n    }\r\n        </#if>\r\n    </#list>\r\n\r\n    @ApiOperation(value = \"下载${table.comment}\", notes = \"下载${table.comment}\", produces = \"application/json\")\r\n    @PostMapping(\"download\")\r\n    public void download(HttpServletResponse response,@Valid @RequestBody ${entity}QueryVO param) throws IOException {\r\n\r\n        EasyBpmAsset.isAssetEmpty(param);\r\n        ${entity}QueryDTO queryDTO = BeanUtils.switchToDTO(param, ${entity}QueryDTO.class);\r\n\r\n        Result<List<${entity}DTO>> result = service.getListByCondition(queryDTO);\r\n        response.setContentType(\"application/vnd.ms-excel\");\r\n        response.setCharacterEncoding(\"utf-8\");\r\n        String fileName = String.valueOf(System.currentTimeMillis()) + \"${table.comment}.xlsx\";\r\n        response.setHeader(\"Content-disposition\", \"attachment;filename=\" + URLEncoder.encode(fileName, \"UTF-8\"));\r\n        EasyExcel.write(response.getOutputStream(), ${entity}ExportDTO.class).registerConverter(new LocalDateTimeConverter()).sheet().doWrite(result.getData());\r\n    }\r\n\r\n    <#list table.fields as field>\r\n        <#if field.keyFlag>\r\n    @ApiOperation(value = \"根据编号获取${table.comment}\", notes = \"根据编号获取${table.comment}\", produces = \"application/json\")\r\n    @PostMapping(\"/getById\")\r\n    public JsonResult getById(@Valid @RequestBody ${entity}SaveOrUpdateVO param) {\r\n\r\n        EasyBpmAsset.isAssetEmpty(param);\r\n        EasyBpmAsset.isAssetEmpty(param.get${field.capitalName}());\r\n\r\n        Result<${entity}DTO> result = service.get${entity}ById(param.get${field.capitalName}());\r\n        if (result.getEntityError().getCode() != EntityError.SUCCESS.getCode()) {\r\n            return JsonResult.error(result.getEntityError());\r\n        }\r\n        return JsonResult.success(result.getData());\r\n    }\r\n        </#if>\r\n    </#list>\r\n}\r\n</#if>\r\n', '1', '/controller/%sController.java', '/templates/controller.java.ftl', '1', '', '1', '1', '0', '', '2021-03-09 17:24:51', '2021-03-09 17:24:51');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('3', 'dto.java.ftl', 'package ${cfg.dtoResponse};\r\n\r\n<#list table.importPackages as pkg>\r\nimport ${pkg};\r\n</#list>\r\n<#if swagger2>\r\nimport io.swagger.annotations.ApiModel;\r\nimport io.swagger.annotations.ApiModelProperty;\r\n</#if>\r\n<#if entityLombokModel>\r\nimport lombok.Data;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.experimental.Accessors;\r\n</#if>\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport java.math.*;\r\n/**\r\n * <p>\r\n    * ${table.comment!}\r\n    * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<#if entityLombokModel>\r\n@Data\r\n    <#if superEntityClass??>\r\n@EqualsAndHashCode(callSuper = true)\r\n    <#else>\r\n@EqualsAndHashCode(callSuper = false)\r\n    </#if>\r\n@Accessors(chain = true)\r\n</#if>\r\n<#if swagger2>\r\n@ApiModel(value=\"${entity}对象\", description=\"${table.comment!}\")\r\n</#if>\r\n<#if superEntityClass??>\r\npublic class ${entity}DTO extends ${superEntityClass} implements Serializable {\r\n<#else>\r\npublic class ${entity}DTO implements Serializable {\r\n</#if>\r\n\r\n<#if entitySerialVersionUID>\r\n    private static final long serialVersionUID = 1L;\r\n</#if>\r\n<#-- ----------  BEGIN 字段循环遍历  ---------->\r\n<#list table.fields as field>\r\n    <#if field.keyFlag>\r\n        <#assign keyPropertyName=\"${field.propertyName}\"/>\r\n    </#if>\r\n\r\n    <#if field.comment!?length gt 0>\r\n        <#if swagger2>\r\n    @ApiModelProperty(value = \"${field.comment}\")\r\n        <#else>\r\n    /**\r\n     * ${field.comment}\r\n     */\r\n        </#if>\r\n    </#if>\r\n    private <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName};\r\n</#list>\r\n<#------------  END 字段循环遍历  ---------->\r\n\r\n<#if !entityLombokModel>\r\n    <#list table.fields as field>\r\n        <#if field.propertyType == \"boolean\">\r\n            <#assign getprefix=\"is\"/>\r\n        <#else>\r\n            <#assign getprefix=\"get\"/>\r\n        </#if>\r\n    public <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${getprefix}${field.capitalName}() {\r\n        return ${field.propertyName};\r\n    }\r\n\r\n        <#if entityBuilderModel>\r\n    public ${entity} set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n        <#else>\r\n    public void set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n        </#if>\r\n        this.${field.propertyName} = ${field.propertyName};\r\n        <#if entityBuilderModel>\r\n        return this;\r\n        </#if>\r\n    }\r\n    </#list>\r\n</#if>\r\n\r\n<#if entityColumnConstant>\r\n    <#list table.fields as field>\r\n    public static final String ${field.name?upper_case} = \"${field.name}\";\r\n\r\n    </#list>\r\n</#if>\r\n\r\n<#if !entityLombokModel>\r\n    @Override\r\n    public String toString() {\r\n        return \"${entity}{\" +\r\n    <#list table.fields as field>\r\n        <#if field_index==0>\r\n            \"${field.propertyName}=\" + ${field.propertyName} +\r\n        <#else>\r\n            \", ${field.propertyName}=\" + ${field.propertyName} +\r\n        </#if>\r\n    </#list>\r\n        \"}\";\r\n    }\r\n</#if>\r\n}\r\n', '1', '/dto/response/%sDTO.java', '/templates/dto.java.ftl', '1', '', '实体类', '1', '0', '', '2021-03-09 18:05:13', '2021-03-09 18:05:13');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('4', 'entity.java.ftl', 'package ${package.Entity};\r\n\r\n<#list table.importPackages as pkg>\r\nimport ${pkg};\r\n</#list>\r\n<#if swagger2>\r\nimport io.swagger.annotations.ApiModel;\r\nimport io.swagger.annotations.ApiModelProperty;\r\n</#if>\r\n<#if entityLombokModel>\r\nimport lombok.Data;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.experimental.Accessors;\r\n</#if>\r\n\r\n/**\r\n * <p>\r\n * ${table.comment!}\r\n * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<#if entityLombokModel>\r\n@Data\r\n    <#if superEntityClass??>\r\n@EqualsAndHashCode(callSuper = true)\r\n    <#else>\r\n@EqualsAndHashCode(callSuper = false)\r\n    </#if>\r\n@Accessors(chain = true)\r\n</#if>\r\n<#if table.convert>\r\n@TableName(\"${table.name}\")\r\n</#if>\r\n<#if swagger2>\r\n@ApiModel(value=\"${entity}对象\", description=\"${table.comment!}\")\r\n</#if>\r\n<#if superEntityClass??>\r\npublic class ${entity}DO extends ${superEntityClass}<#if activeRecord><${entity}DO></#if> {\r\n<#elseif activeRecord>\r\npublic class ${entity}DO extends Model<${entity}DO> {\r\n<#else>\r\npublic class ${entity}DO implements Serializable {\r\n</#if>\r\n\r\n<#if entitySerialVersionUID>\r\n    private static final long serialVersionUID = 1L;\r\n</#if>\r\n<#-- ----------  BEGIN 字段循环遍历  ---------->\r\n<#list table.fields as field>\r\n    <#if field.keyFlag>\r\n        <#assign keyPropertyName=\"${field.propertyName}\"/>\r\n    </#if>\r\n\r\n    <#if field.comment!?length gt 0>\r\n        <#if swagger2>\r\n    @ApiModelProperty(value = \"${field.comment}\")\r\n        <#else>\r\n    /**\r\n     * ${field.comment}\r\n     */\r\n        </#if>\r\n    </#if>\r\n    <#if field.keyFlag>\r\n        <#-- 主键 -->\r\n        <#if field.keyIdentityFlag>\r\n    @TableId(value = \"${field.name}\", type = IdType.AUTO)\r\n        <#elseif idType??>\r\n    @TableId(value = \"${field.name}\", type = IdType.${idType})\r\n        <#elseif field.convert>\r\n    @TableId(\"${field.name}\")\r\n        </#if>\r\n        <#-- 普通字段 -->\r\n    <#elseif field.fill??>\r\n    <#-- -----   存在字段填充设置   ----->\r\n        <#if field.convert>\r\n    @TableField(value = \"${field.name}\", fill = FieldFill.${field.fill})\r\n        <#else>\r\n    @TableField(fill = FieldFill.${field.fill})\r\n        </#if>\r\n    <#elseif field.convert>\r\n    @TableField(\"${field.name}\")\r\n    </#if>\r\n    <#-- 乐观锁注解 -->\r\n    <#if (versionFieldName!\"\") == field.name>\r\n    @Version\r\n    </#if>\r\n    <#-- 逻辑删除注解 -->\r\n    <#if (logicDeleteFieldName!\"\") == field.name>\r\n    @TableLogic\r\n    </#if>\r\n    private ${field.propertyType} ${field.propertyName};\r\n</#list>\r\n<#------------  END 字段循环遍历  ---------->\r\n\r\n<#if !entityLombokModel>\r\n    <#list table.fields as field>\r\n        <#if field.propertyType == \"boolean\">\r\n            <#assign getprefix=\"is\"/>\r\n        <#else>\r\n            <#assign getprefix=\"get\"/>\r\n        </#if>\r\n    public <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${getprefix}${field.capitalName}() {\r\n        return ${field.propertyName};\r\n    }\r\n\r\n    <#if entityBuilderModel>\r\n    public ${entity} set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n    <#else>\r\n    public void set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n    </#if>\r\n        this.${field.propertyName} = ${field.propertyName};\r\n        <#if entityBuilderModel>\r\n        return this;\r\n        </#if>\r\n    }\r\n    </#list>\r\n</#if>\r\n\r\n<#if entityColumnConstant>\r\n    <#list table.fields as field>\r\n    public static final String ${field.name?upper_case} = \"${field.name}\";\r\n\r\n    </#list>\r\n</#if>\r\n<#if activeRecord>\r\n    @Override\r\n    protected Serializable pkVal() {\r\n    <#if keyPropertyName??>\r\n        return this.${keyPropertyName};\r\n    <#else>\r\n        return null;\r\n    </#if>\r\n    }\r\n\r\n</#if>\r\n<#if !entityLombokModel>\r\n    @Override\r\n    public String toString() {\r\n        return \"${entity}{\" +\r\n    <#list table.fields as field>\r\n        <#if field_index==0>\r\n            \"${field.propertyName}=\" + ${field.propertyName} +\r\n        <#else>\r\n            \", ${field.propertyName}=\" + ${field.propertyName} +\r\n        </#if>\r\n    </#list>\r\n        \"}\";\r\n    }\r\n</#if>\r\n}\r\n', '1', '/entity/%sDO.java', '/templates/entity.java.ftl', '1', '', '', '1', '0', '', '2021-03-10 10:48:08', '2021-03-10 10:48:08');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('5', 'index.ftl', '<template>\r\n    <div class=\"app-container\">\r\n        <div>\r\n            <div class=\"filter-container\" v-if=\"showSearch\">\r\n                <el-form :inline=\"true\" :model=\"listQuery\">\r\n                <#list table.fields as field>\r\n                    <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'queryFlag\'] == 1 >\r\n                 <el-form-item label=\"${field.comment}\">\r\n                     <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'textarea\' >\r\n                     <el-input type=\"textarea\" v-model=\"listQuery.${field.propertyName}\" autosize  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\" ></el-input>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'select \' >\r\n                      <el-select v-model=\"listQuery.${field.propertyName}\" placeholder=\"请选择\">\r\n                         <el-option key=\"深圳\" label=\"选项1\" value=\"深圳\"> </el-option>\r\n                         <el-option key=\"上海\" label=\"选项2\" value=\"上海\"> </el-option>\r\n                      </el-select>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'radio\' >\r\n                          <el-radio-group v-model=\"listQuery.${field.propertyName}\" >\r\n                              <el-radio :label=\"3\">备选项</el-radio>\r\n                              <el-radio :label=\"6\">备选项</el-radio>\r\n                              <el-radio :label=\"9\">备选项</el-radio>\r\n                          </el-radio-group>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch\' >\r\n                         <el-switch v-model=\"listQuery.${field.propertyName}\"></el-switch>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch(0,1)\' >\r\n                         <el-switch v-model=\"listQuery.${field.propertyName}\"  :active-value=\"1\" :inactive-value=\"0\"></el-switch>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'checkbox\' >\r\n                        <el-checkbox-group v-model=\"listQuery.${field.propertyName}\">\r\n                            <el-checkbox label=\"复选框 A\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 B\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 C\"></el-checkbox>\r\n                        </el-checkbox-group>\r\n                     <#else >\r\n                         <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \'BETWEEN\'>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'date\' >\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}Start\"  type=\"date\" placeholder=\"请输入开始<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                           -\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}End\"  type=\"date\" placeholder=\"请输入结束<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'time\' >\r\n                         <el-time-select v-model=\"listQuery.${field.propertyName}Start\"  type=\"date\" placeholder=\"请输入开始<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-time-select>\r\n                            -\r\n                         <el-time-select v-model=\"listQuery.${field.propertyName}End\"  type=\"date\" placeholder=\"请输入结束<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-time-select>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'datetime\' >\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}Start\"  type=\"datetime\" placeholder=\"请输入开始<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                            -\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}End\"  type=\"datetime\" placeholder=\"请输入结束<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#else >\r\n                         <el-input v-model=\"listQuery.${field.propertyName}Start\"  placeholder=\"请输入开始<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\" ></el-input>\r\n                           -\r\n                         <el-input v-model=\"listQuery.${field.propertyName}End\"  placeholder=\"请输入结束<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\" ></el-input>\r\n                             </#if>\r\n                          <#else>\r\n                            <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'date\' >\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                            <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'time\' >\r\n                         <el-time-select v-model=\"listQuery.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-time-select>\r\n                            <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'datetime\' >\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}\"  type=\"datetime\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                            <#else >\r\n                         <el-input v-model=\"listQuery.${field.propertyName}\"  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\" ></el-input>\r\n                            </#if>\r\n                         </#if>\r\n                     </#if>\r\n                 </el-form-item>\r\n                    </#if>\r\n                </#list>\r\n                </el-form>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button type=\"success\" @click=\"getList\" icon=\"el-icon-search\" v-waves>查询</el-button>\r\n										<el-button @click=\"download\" icon=\"el-icon-download\" v-waves>导出</el-button>\r\n                    <el-button type=\"primary\" @click=\"handleCreate\" icon=\"el-icon-plus\" v-waves>添加</el-button>\r\n                 </span>\r\n            </div>\r\n            <div class=\"table-container\">\r\n                <el-row :gutter=\"10\" class=\"mb8\">\r\n                    <right-toolbar :showSearch.sync=\"showSearch\" :columns=\"columns\" @queryTable=\"getList\" :defaultHideColumns.sync=\"defaultHideColumns\"></right-toolbar>\r\n                </el-row>\r\n                <el-table v-loading=\"listLoading\" :data=\"list\" size=\"mini\" element-loading-text=\"Loading\" fit border highlight-current-row>\r\n                    <el-table-column align=\"center\" label=\"序号\" width=\"95\" sortable>\r\n                        <template slot-scope=\"scope\">\r\n                            {{ (listQuery.pageIndex - 1 ) * listQuery.pageSize + scope.$index + 1 }}\r\n                        </template>\r\n                    </el-table-column>\r\n                    <#list table.fields as field>\r\n                    <#if field.propertyType == \"Date\" || \"LocalDateTime\" == field.propertyType>\r\n                    <el-table-column label=\"${field.comment}\" align=\"center\" v-if=\"columns[${field_index}].visible\" >\r\n                        <template slot-scope=\"scope\">\r\n                            <span>{{scope.row.${field.propertyName}}}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <#elseif field.propertyName == \'validState\'>\r\n                        <el-table-column label=\"状态\" prop=\"${field.propertyName}\" align=\"center\" v-if=\"columns[${field_index}].visible\">\r\n                            <template slot-scope=\"scope\">\r\n                                <el-tag :type=\"scope.row.${field.propertyName} | statusFilter\">\r\n                                    <span>{{ statusMap[scope.row.${field.propertyName}]}}</span>\r\n                                </el-tag>\r\n                            </template>\r\n                        </el-table-column>\r\n                    <#else>\r\n                    <el-table-column label=\"<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\" prop=\"${field.propertyName}\" align=\"center\" v-if=\"columns[${field_index}].visible\" sortable :show-overflow-tooltip=\"true\" ></el-table-column>\r\n                    </#if>\r\n                    </#list>\r\n                    <el-table-column align=\"center\" label=\"操作\" fixed=\"right\" min-width=\"180px\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button size=\"mini\" type=\"primary\" @click=\"handleUpdate(scope.row)\" icon=\"el-icon-edit\" plain v-waves>编辑</el-button>\r\n                            <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\" icon=\"el-icon-delete\" plain v-waves>禁用</el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <!-- 分页 -->\r\n                <div class=\"page-footer\">\r\n                    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.pageIndex\" :limit.sync=\"listQuery.pageSize\" style=\"float:right;\" @pagination=\"getList\" />\r\n                </div>\r\n            </div>\r\n\r\n            <el-dialog :title=\"titleMap[dialogStatus]\" :visible.sync=\"dialogVisible\" width=\"40%\" @close=\"handleDialogClose\">\r\n                <el-form ref=\"dataForm\" :model=\"form\" :rules=\"rules\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                    <#list table.fields as field>\r\n                     <#--<#if field.propertyName != \'operatorId\' && field.propertyName != \'operatorName\' && field.propertyName != \'createTime\' && field.propertyName != \'updateTime\'>-->\r\n                         <el-form-item v-if=\"<#if field.customMap[\'customFieldInfo\'][\'insertFlag\']?? && field.customMap[\'customFieldInfo\'][\'insertFlag\'] == 1 >true<#else>false</#if>\" label=\"<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>:\" prop=\"${field.propertyName}\">\r\n                     <#--</#if>-->\r\n                        <#if field.keyFlag>\r\n                            <el-input v-model=\"form.${field.propertyName}\" disabled></el-input>\r\n                        <#--<#elseif field.propertyName == \'operatorId\' || field.propertyName == \'operatorName\' || field.propertyName == \'createTime\' || field.propertyName == \'updateTime\'>-->\r\n\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'textarea\' >\r\n                         <el-input type=\"textarea\" v-model=\"form.${field.propertyName}\" autosize  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?length gt 1> :maxlength=\"${field.customMap[\'customFieldInfo\'][\'validateMaxLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?length gt 1> :minlength=\"${field.customMap[\'customFieldInfo\'][\'validateMinLength\']}\" </#if>\r\n                         ></el-input>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'select \' >\r\n                      <el-select v-model=\"form.${field.propertyName}\" placeholder=\"请选择\">\r\n                          <el-option key=\"深圳\" label=\"选项1\" value=\"深圳\"> </el-option>\r\n                          <el-option key=\"上海\" label=\"选项2\" value=\"上海\"> </el-option>\r\n                      </el-select>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'radio\' >\r\n                          <el-radio-group v-model=\"form.${field.propertyName}\" >\r\n                              <el-radio :label=\"3\">备选项</el-radio>\r\n                              <el-radio :label=\"6\">备选项</el-radio>\r\n                              <el-radio :label=\"9\">备选项</el-radio>\r\n                          </el-radio-group>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch\' >\r\n                         <el-switch v-model=\"form.${field.propertyName}\"></el-switch>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch(0,1)\' >\r\n                         <el-switch v-model=\"form.${field.propertyName}\"  :active-value=\"1\" :inactive-value=\"0\"></el-switch>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'checkbox\' >\r\n                        <el-checkbox-group v-model=\"form.${field.propertyName}\">\r\n                            <el-checkbox label=\"复选框 A\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 B\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 C\"></el-checkbox>\r\n                        </el-checkbox-group>\r\n                      <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'editor\' >\r\n                             <QuillEditor  v-model=\"form.${field.propertyName}\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']}<#else>${field.comment}</#if>\"/>\r\n                     <#else >\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'date\' >\r\n                         <el-date-picker v-model=\"form.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'time\' >\r\n                         <el-time-select v-model=\"form.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-time-select>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'datetime\' >\r\n                         <el-date-picker v-model=\"form.${field.propertyName}\"  type=\"datetime\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#else >\r\n                         <el-input v-model=\"form.${field.propertyName}\"  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?length gt 1> :maxlength=\"${field.customMap[\'customFieldInfo\'][\'validateMaxLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?length gt 1> :minlength=\"${field.customMap[\'customFieldInfo\'][\'validateMinLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxValue\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxValue\']?length gt 1> :max=\"${field.customMap[\'customFieldInfo\'][\'validateMaxValue\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinValue\']?? && field.customMap[\'customFieldInfo\'][\'validateMinValue\']?length gt 1> :min=\"${field.customMap[\'customFieldInfo\'][\'validateMinValue\']}\" </#if>\r\n                         ></el-input>\r\n                             </#if>\r\n                     </#if>\r\n                         </el-form-item>\r\n                   </#list>\r\n                </el-form>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"dialogVisible = false\" v-waves>取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"submitForm\" v-waves>确 定</el-button>\r\n                </span>\r\n            </el-dialog>\r\n\r\n            <el-dialog :title=\"titleMap[dialogStatus]\" :visible.sync=\"updateDialogVisible\" width=\"40%\" @close=\"handleDialogClose\">\r\n                <el-form ref=\"updateDataForm\" :model=\"updateForm\" :rules=\"updateRules\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                    <#list table.fields as field>\r\n                     <#--<#if field.propertyName != \'operatorId\' && field.propertyName != \'operatorName\' && field.propertyName != \'createTime\' && field.propertyName != \'updateTime\'>-->\r\n                         <el-form-item v-if=\"<#if field.customMap[\'customFieldInfo\'][\'updateFlag\']?? && field.customMap[\'customFieldInfo\'][\'updateFlag\'] == 1 >true<#else>false</#if>\" label=\"<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>:\" prop=\"${field.propertyName}\">\r\n                     <#--</#if>-->\r\n                         <#if field.keyFlag>\r\n                            <el-input v-model=\"updateForm.${field.propertyName}\" disabled></el-input>\r\n                         <#--<#elseif field.propertyName == \'operatorId\' || field.propertyName == \'operatorName\' || field.propertyName == \'createTime\' || field.propertyName == \'updateTime\'>-->\r\n\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'textarea\' >\r\n                         <el-input type=\"textarea\" v-model=\"updateForm.${field.propertyName}\" autosize  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?length gt 1> :maxlength=\"${field.customMap[\'customFieldInfo\'][\'validateMaxLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?length gt 1> :minlength=\"${field.customMap[\'customFieldInfo\'][\'validateMinLength\']}\" </#if>\r\n                         ></el-input>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'select \' >\r\n                      <el-select v-model=\"updateForm.${field.propertyName}\" placeholder=\"请选择\">\r\n                          <el-option key=\"深圳\" label=\"选项1\" value=\"深圳\"> </el-option>\r\n                          <el-option key=\"上海\" label=\"选项2\" value=\"上海\"> </el-option>\r\n                      </el-select>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'radio\' >\r\n                          <el-radio-group v-model=\"updateForm.${field.propertyName}\" >\r\n                              <el-radio :label=\"3\">备选项</el-radio>\r\n                              <el-radio :label=\"6\">备选项</el-radio>\r\n                              <el-radio :label=\"9\">备选项</el-radio>\r\n                          </el-radio-group>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'editor\' >\r\n                             <QuillEditor  v-model=\"updateForm.${field.propertyName}\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']}<#else>${field.comment}</#if>\"/>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch\' >\r\n                         <el-switch v-model=\"updateForm.${field.propertyName}\"></el-switch>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch(0,1)\' >\r\n                         <el-switch v-model=\"updateForm.${field.propertyName}\"  :active-value=\"1\" :inactive-value=\"0\"></el-switch>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'checkbox\' >\r\n                        <el-checkbox-group v-model=\"listQuery.${field.propertyName}\">\r\n                            <el-checkbox label=\"复选框 A\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 B\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 C\"></el-checkbox>\r\n                        </el-checkbox-group>\r\n                         <#else >\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'date\' >\r\n                         <el-date-picker v-model=\"updateForm.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'time\' >\r\n                         <el-time-select v-model=\"updateForm.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-time-select>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'datetime\' >\r\n                         <el-date-picker v-model=\"updateForm.${field.propertyName}\"  type=\"datetime\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#else >\r\n                         <el-input v-model=\"updateForm.${field.propertyName}\"  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?length gt 1 > :maxlength=\"${field.customMap[\'customFieldInfo\'][\'validateMaxLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?length gt 1> :minlength=\"${field.customMap[\'customFieldInfo\'][\'validateMinLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxValue\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxValue\']?length gt 1> :max=\"${field.customMap[\'customFieldInfo\'][\'validateMaxValue\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinValue\']?? && field.customMap[\'customFieldInfo\'][\'validateMinValue\']?length gt 1> :min=\"${field.customMap[\'customFieldInfo\'][\'validateMinValue\']}\" </#if>\r\n                         ></el-input>\r\n                             </#if>\r\n                         </#if>\r\n                         </el-form-item>\r\n                    </#list>\r\n                </el-form>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"updateDialogVisible = false\" v-waves>取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"submitForm\" v-waves>确 定</el-button>\r\n                </span>\r\n            </el-dialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { get${entity}ListPage, save${entity},update${entity}, deleteById,download } from \"@/api/${table.entityPath}\";\r\n    import waves from \'@/directive/waves\'\r\n    import Pagination from \'@/components/Pagination\'\r\n    import {validateEmail,validatePhone,validateUrl, validateIp, validateTel, validateIdCard} from \"../../../utils/formvalidate.js\"\r\n\r\n    export default {\r\n        components: { Pagination},\r\n        directives: { waves },\r\n        filters: {\r\n            statusFilter(status) {\r\n                const statusMap = {\r\n                    0: \'info\',\r\n                    1: \'success\'\r\n                }\r\n                return statusMap[status]\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                showSearch: true,\r\n                //默认查询隐藏列\r\n                defaultHideColumns: [\r\n                   <#if (cfg.listHideFields ? exists) >\r\n                       <#list cfg.listHideFields as field>\r\n                    \'${field.propertyName}\'<#if field_has_next >,</#if>\r\n                       </#list>\r\n                   </#if>\r\n                ],\r\n                // 列信息\r\n                columns: [\r\n                    <#list table.fields as field>\r\n                    { key: ${field_index},value: \'${field.propertyName}\', label: \'${field.comment}\', visible: true }<#if field_has_next>,</#if>\r\n                    </#list>\r\n                 ],\r\n                dialogVisible: false,\r\n                updateDialogVisible: false,\r\n                list: [],\r\n                listLoading: true,\r\n                total: 0,\r\n                listQuery: {\r\n                    pageIndex: 1,\r\n                    pageSize: 10,\r\n                 <#if (cfg.queryFields ? exists) >\r\n                     <#list cfg.queryFields as field>\r\n                    <#if field.queryMethod == \"BETWEEN\">\r\n                        ${field.propertyName}Start: undefined,\r\n                        ${field.propertyName}End: undefined <#if field_has_next >,</#if>\r\n                       <#else >\r\n                           ${field.propertyName}: undefined <#if field_has_next >,</#if>\r\n                    </#if>\r\n                     </#list>\r\n                 </#if>\r\n            },\r\n            input: \'\',\r\n                    form: {\r\n            <#list table.fields as field>\r\n                <#if field.propertyName == \'validState\'>\r\n                    ${field.propertyName}: 1, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                <#else>\r\n                    ${field.propertyName}: undefined, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                </#if>\r\n                <#--${field.propertyName}: ${((field.customMap[\'DEFAULT\']!\'\')?length>0)?string((field.customMap[\'DEFAULT\']!\'\'),\"undefined\")}, //${field.comment}-->\r\n            </#list>\r\n            },\r\n            updateForm: {\r\n            <#list table.fields as field>\r\n                <#if field.propertyName == \'validState\'>\r\n                    ${field.propertyName}: 1, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                <#else>\r\n                    ${field.propertyName}: undefined, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                </#if>\r\n            <#--${field.propertyName}: ${((field.customMap[\'DEFAULT\']!\'\')?length>0)?string((field.customMap[\'DEFAULT\']!\'\'),\"undefined\")}, //${field.comment}-->\r\n            </#list>\r\n            },\r\n            dialogStatus: \"\",\r\n            titleMap: {\r\n                update: \"编辑\",\r\n                create: \"创建\"\r\n            },\r\n            statusMap: { 1: \'正常\', 0: \'停用\' },\r\n            rules: {\r\n               <#list table.fields as field>\r\n                   ${field.propertyName}:[\r\n                   <#if field.customMap[\'validate\']?? && (field.customMap[\'validate\']?size > 0)>\r\n                       <#list field.customMap[\'validate\'] as validate>\r\n                           <#if (validate)?exists >\r\n                               ${validate} <#if validate_has_next>,</#if>\r\n                           </#if>\r\n                       </#list>\r\n                   </#if >\r\n                   ]<#if field_has_next>,</#if>\r\n               </#list>\r\n            },\r\n            updateRules: {\r\n                <#list table.fields as field>\r\n                    ${field.propertyName}:[\r\n                    <#if field.customMap[\'validate\']?? && (field.customMap[\'validate\']?size > 0)>\r\n                    <#list field.customMap[\'validate\'] as validate>\r\n                        <#if (validate)?exists >\r\n                            ${validate} <#if validate_has_next>,</#if>\r\n                        </#if>\r\n                    </#list>\r\n                    </#if >\r\n                   ]<#if field_has_next>,</#if>\r\n                </#list>\r\n            }\r\n        }\r\n        },\r\n        created() {\r\n            this.getList();\r\n        },\r\n        methods: {\r\n            getList() {\r\n                this.listLoading = true;\r\n                get${entity}ListPage(this.listQuery).then(response => {\r\n                    this.list = response.data.list;\r\n                this.total = response.data.total;\r\n                this.listLoading = false;\r\n                }).catch(err => {\r\n                    this.listLoading = false;\r\n                    console.log(err);\r\n                });\r\n            },\r\n						download() {\r\n                download(this.listQuery).then(response => {\r\n                \r\n                }).catch(err => {\r\n                    \r\n                    console.log(err);\r\n                });\r\n            },\r\n            handleCreate() {\r\n                this.resetForm();\r\n                this.dialogStatus = \"create\";\r\n                this.dialogVisible = true;\r\n            },\r\n            handleUpdate(row) {\r\n                this.updateForm = Object.assign({}, row);\r\n                this.dialogStatus = \"update\";\r\n                this.updateDialogVisible = true;\r\n            },\r\n            handleDelete(row) {\r\n                let _this = this;\r\n                _this.$confirm(\'确定删除吗?\', \'提示\', {\r\n                    confirmButtonText: \'确定\',\r\n                    cancelButtonText: \'取消\',\r\n                    type: \'warning\'\r\n                }).then(function () {\r\n            <#list table.fields as field>\r\n            <#if  (field.keyFlag) >\r\n                    let id = row.${field.propertyName};\r\n            </#if>\r\n            </#list>\r\n                deleteById(id).then(response => {\r\n                    if (response.code == 200) {\r\n                    this.getList();\r\n                    this.$messages.success(response.messages);\r\n                } else {\r\n                    this.$messages.error(response.messages);\r\n                }\r\n            });\r\n            })\r\n           },\r\n            submitForm() {\r\n                let _this = this;\r\n                let refForm = _this.dialogStatus == \"create\" ? \'dataForm\' : \'updateDataForm\'\r\n                _this.$refs[`<#noparse>${</#noparse>refForm<#noparse>}</#noparse>`].validate(valid => {\r\n                    if (valid) {\r\n                        this.$confirm(\'确定操作吗?\', \'提示\', {\r\n                            confirmButtonText: \'确定\',\r\n                            cancelButtonText: \'取消\',\r\n                            type: \'warning\'\r\n                        }).then(function () {\r\n                            if(_this.dialogStatus == \"create\"){\r\n                                save${entity}(_this.form).then(response => {\r\n                                    if (response.code == 200) {\r\n                                    _this.getList();\r\n                                    _this.$messages.success(response.messages);\r\n                                    _this.dialogVisible = false;\r\n                                } else {\r\n                                    _this.$messages.error(response.messages);\r\n                                }\r\n                            }).catch(err => { console.log(err);  })\r\n\r\n                            } else {\r\n                                update${entity}(_this.updateForm).then(response => {\r\n                                    if (response.code == 200) {\r\n                                    _this.getList();\r\n                                    _this.$messages.success(response.messages);\r\n                                    _this.updateDialogVisible = false;\r\n                                } else {\r\n                                    _this.$messages.error(response.messages);\r\n                                }\r\n                            }).catch(err => { console.log(err);  })\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            resetForm() {\r\n                this.form = {\r\n            <#list table.fields as field>\r\n                <#if field.propertyName == \'validState\'>\r\n                    ${field.propertyName}: 1, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                <#else>\r\n                    ${field.propertyName}: undefined, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                </#if>\r\n            </#list>\r\n            }\r\n            },\r\n            // 监听dialog关闭时的处理事件\r\n            handleDialogClose(){\r\n                let refForm = this.dialogStatus == \"create\" ? \'dataForm\' : \'updateDataForm\'\r\n                if(this.$refs[[`<#noparse>${</#noparse>refForm<#noparse>}</#noparse>`]]){\r\n                    this.$refs[[`<#noparse>${</#noparse>refForm<#noparse>}</#noparse>`]].clearValidate(); // 清除整个表单的校验\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style  rel=\"stylesheet/scss\" lang=\"scss\">\r\n\r\n    .page-footer{\r\n        margin-top: 20px;\r\n        width: 100%;\r\n        height: 50px;\r\n    }\r\n    .filter-container {\r\n        padding-bottom: 10px;\r\n        .filter-item {\r\n            display: inline-block;\r\n            vertical-align: middle;\r\n            margin-bottom: 10px;\r\n        }\r\n    }\r\n</style>', '0', '/src/views/generator/%s/index.vue', '/templates/index.ftl', '1', '', '', '1', '0', '', '2021-03-01 15:17:09', '2021-03-08 15:25:57');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('6', 'mapper.java.ftl', 'package ${package.Mapper};\r\n\r\nimport ${package.Entity}.${entity}DO;\r\nimport ${superMapperClassPackage};\r\nimport org.apache.ibatis.annotations.Mapper;\r\nimport ${cfg.dtoRequest}.*;\r\nimport ${cfg.dtoResponse}.*;\r\n\r\nimport java.util.List;\r\n/**\r\n * <p>\r\n * ${table.comment!} Mapper 接口\r\n * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<#if kotlin>\r\ninterface ${table.mapperName} : ${superMapperClass}<${entity}DO>\r\n<#else>\r\n@Mapper\r\npublic interface ${table.mapperName} extends ${superMapperClass}<${entity}DO> {\r\n\r\n    List<${entity}DTO> getListByCondition(${entity}QueryDTO param);\r\n\r\n}\r\n</#if>\r\n', '1', '/mapper/%sMapper.java', '/templates/mapper.java.ftl', '1', '', '', '1', '0', '', '2021-03-01 15:17:45', '2021-03-05 10:41:25');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('7', 'mapper.xml.ftl', '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"${package.Mapper}.${table.mapperName}\">\r\n\r\n<#if enableCache>\r\n    <!-- 开启二级缓存 -->\r\n    <cache type=\"org.mybatis.caches.ehcache.LoggingEhcache\"/>\r\n\r\n</#if>\r\n<#if baseResultMap>\r\n    <!-- 通用查询映射结果 -->\r\n    <resultMap id=\"BaseResultMap\" type=\"${package.Entity}.${entity}DO\">\r\n<#list table.fields as field>\r\n<#if field.keyFlag><#--生成主键排在第一位-->\r\n        <id column=\"${field.name}\" property=\"${field.propertyName}\" />\r\n</#if>\r\n</#list>\r\n<#list table.commonFields as field><#--生成公共字段 -->\r\n    <result column=\"${field.name}\" property=\"${field.propertyName}\" />\r\n</#list>\r\n<#list table.fields as field>\r\n<#if !field.keyFlag><#--生成普通字段 -->\r\n        <result column=\"${field.name}\" property=\"${field.propertyName}\" />\r\n</#if>\r\n</#list>\r\n    </resultMap>\r\n\r\n</#if>\r\n<#if baseColumnList>\r\n    <!-- 通用查询结果列 -->\r\n    <sql id=\"Base_Column_List\">\r\n<#list table.commonFields as field>\r\n        ${field.name},\r\n</#list>\r\n        ${table.fieldNames}\r\n    </sql>\r\n\r\n</#if>\r\n    <select id=\"getListByCondition\" parameterType=\"${cfg.dtoRequest}.${entity}QueryDTO\"\r\n            resultType=\"${cfg.dtoResponse}.${entity}DTO\">\r\n        select\r\n            <include refid=\"Base_Column_List\"/>\r\n        from\r\n            ${table.name} t\r\n        where\r\n            1 = 1\r\n        <#list table.fields as field>\r\n            <#if field.customMap[\'customFieldInfo\'][\'propertyType\'] == \"String\" >\r\n	   <if test=\"${field.propertyName} != null and ${field.propertyName} != \'\'\">\r\n            <#elseif field.customMap[\'customFieldInfo\'][\'propertyType\'] == \"Long\">\r\n	   <if test=\"${field.propertyName} != null and ${field.propertyName} > 0\">\r\n            <#elseif field.customMap[\'customFieldInfo\'][\'propertyType\'] == \"Integer\" && field.propertyName != \'validState\'>\r\n        <if test=\"${field.propertyName} != null and ${field.propertyName} > 0\">\r\n            <#elseif field.customMap[\'customFieldInfo\'][\'propertyType\'] == \"Integer\" && field.propertyName == \'validState\'>\r\n		<if test=\"${field.propertyName} != null and ${field.propertyName} >= 0\">\r\n            <#else >\r\n        <if test=\"${field.propertyName} != null \">\r\n            </#if>\r\n            <#if field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"EQ\" >\r\n	         and t.${field.name} = <#noparse>#{</#noparse>${field.propertyName}<#noparse>}</#noparse>\r\n            <#elseif field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"NE\">\r\n	         and t.${field.name} != <#noparse>#{</#noparse>${field.propertyName}<#noparse>}</#noparse>\r\n            <#elseif field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"GT\">\r\n	         and t.${field.name} &gt; <#noparse>#{</#noparse>${field.propertyName}<#noparse>}</#noparse>\r\n            <#elseif field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"GTE\">\r\n	         and t.${field.name} &gt;= <#noparse>#{</#noparse>${field.propertyName}<#noparse>}</#noparse>\r\n            <#elseif field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"LT\">\r\n	         and t.${field.name} &lt; <#noparse>#{</#noparse>${field.propertyName}<#noparse>}</#noparse>\r\n            <#elseif field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"LTe\">\r\n	         and t.${field.name} &lt;= <#noparse>#{</#noparse>${field.propertyName}<#noparse>}</#noparse>\r\n            <#elseif field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"LIKE\">\r\n	         and t.${field.name} like concat(\'%\',<#noparse>#{</#noparse>${field.propertyName}<#noparse>}</#noparse>,\'%\')\r\n            <#elseif field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"BETWEEN\">\r\n	         and t.${field.name} = <#noparse>#{</#noparse>${field.propertyName}<#noparse>}</#noparse>\r\n            <#else>\r\n             and t.${field.name} = <#noparse>#{</#noparse>${field.propertyName}<#noparse>}</#noparse>\r\n            </#if>\r\n        </if>\r\n\r\n          <#if field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"BETWEEN\" >\r\n        <if test=\"${field.propertyName}Start != null\">\r\n            and t.${field.name} &gt;= <#noparse>#{</#noparse>${field.propertyName}Start<#noparse>}</#noparse>\r\n        </if>\r\n\r\n        <if test=\"${field.propertyName}End != null\">\r\n            and t.${field.name} &lt;= <#noparse>#{</#noparse>${field.propertyName}End<#noparse>}</#noparse>\r\n        </if>\r\n           </#if>\r\n        </#list>\r\n    </select>\r\n</mapper>\r\n', '1', '/mapper/%sMapper.xml', '/templates/mapper.xml.ftl', '1', '', '', '1', '0', '', '2021-03-01 15:18:09', '2021-03-05 10:41:31');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('8', 'queryDTO.java.ftl', 'package ${cfg.dtoRequest};\r\n\r\n<#list table.importPackages as pkg>\r\nimport ${pkg};\r\n</#list>\r\n<#if swagger2>\r\nimport io.swagger.annotations.ApiModel;\r\nimport io.swagger.annotations.ApiModelProperty;\r\n</#if>\r\n<#if entityLombokModel>\r\nimport lombok.Data;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.experimental.Accessors;\r\n</#if>\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport java.math.*;\r\n/**\r\n * <p>\r\n    * ${table.comment!}\r\n    * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<#if entityLombokModel>\r\n@Data\r\n    <#if superEntityClass??>\r\n@EqualsAndHashCode(callSuper = true)\r\n    <#else>\r\n@EqualsAndHashCode(callSuper = false)\r\n    </#if>\r\n@Accessors(chain = true)\r\n</#if>\r\n<#if swagger2>\r\n@ApiModel(value=\"${entity}对象\", description=\"${table.comment!}\")\r\n</#if>\r\n<#if superEntityClass??>\r\npublic class ${entity}QueryDTO extends ${superEntityClass} implements Serializable {\r\n<#else>\r\npublic class ${entity}QueryDTO implements Serializable {\r\n</#if>\r\n\r\n<#if entitySerialVersionUID>\r\n    private static final long serialVersionUID = 1L;\r\n</#if>\r\n<#-- ----------  BEGIN 字段循环遍历  ---------->\r\n<#list table.fields as field>\r\n    <#if field.keyFlag>\r\n        <#assign keyPropertyName=\"${field.propertyName}\"/>\r\n    </#if>\r\n\r\n    <#if field.comment!?length gt 0>\r\n    /**\r\n     * ${field.comment}\r\n     */\r\n    </#if>\r\n<#-- 乐观锁注解 -->\r\n    <#if (versionFieldName!\"\") == field.name>\r\n    @Version\r\n    </#if>\r\n<#-- 逻辑删除注解 -->\r\n    <#if (logicDeleteFieldName!\"\") == field.name>\r\n    @TableLogic\r\n    </#if>\r\n    private <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName};\r\n\r\n    <#if field.customMap[\'customFieldInfo\'][\'queryMethod\']?? && field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"BETWEEN\"  >\r\n        <#if field.comment!?length gt 0>\r\n    /**\r\n     * ${field.comment}开始\r\n     */\r\n        </#if>\r\n    private <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}Start;\r\n        <#if field.comment!?length gt 0>\r\n    /**\r\n     * ${field.comment}结束\r\n     */\r\n        </#if>\r\n    private <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}End;\r\n    </#if>\r\n</#list>\r\n<#------------  END 字段循环遍历  ---------->\r\n\r\n<#if !entityLombokModel>\r\n    <#list table.fields as field>\r\n        <#if field.propertyType == \"boolean\">\r\n            <#assign getprefix=\"is\"/>\r\n        <#else>\r\n            <#assign getprefix=\"get\"/>\r\n        </#if>\r\n    public <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${getprefix}${field.capitalName}() {\r\n        return ${field.propertyName};\r\n    }\r\n\r\n        <#if entityBuilderModel>\r\n    public ${entity} set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n        <#else>\r\n    public void set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n        </#if>\r\n        this.${field.propertyName} = ${field.propertyName};\r\n        <#if entityBuilderModel>\r\n        return this;\r\n        </#if>\r\n    }\r\n    </#list>\r\n</#if>\r\n\r\n<#if entityColumnConstant>\r\n    <#list table.fields as field>\r\n    public static final String ${field.name?upper_case} = \"${field.name}\";\r\n\r\n    </#list>\r\n</#if>\r\n    /**\r\n     *  当前页码\r\n     */\r\n    private Integer pageIndex;\r\n\r\n    /**\r\n     * 每页展示数量\r\n     */\r\n    private Integer pageSize;\r\n\r\n<#if !entityLombokModel>\r\n    @Override\r\n    public String toString() {\r\n        return \"${entity}{\" +\r\n    <#list table.fields as field>\r\n        <#if field_index==0>\r\n            \"${field.propertyName}=\" + ${field.propertyName} +\r\n        <#else>\r\n            \", ${field.propertyName}=\" + ${field.propertyName} +\r\n        </#if>\r\n    </#list>\r\n        \"}\";\r\n    }\r\n</#if>\r\n}\r\n', '1', '/dto/request/%sQueryDTO.java', '/templates/queryDTO.java.ftl', '1', '', '', '1', '0', '', '2021-03-01 15:20:44', '2021-03-05 10:41:38');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('9', 'queryVO.java.ftl', 'package ${cfg.voRequest};\r\n\r\n<#list table.importPackages as pkg>\r\nimport ${pkg};\r\n</#list>\r\n<#if swagger2>\r\nimport io.swagger.annotations.ApiModel;\r\nimport io.swagger.annotations.ApiModelProperty;\r\n</#if>\r\n<#if entityLombokModel>\r\nimport lombok.Data;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.experimental.Accessors;\r\n</#if>\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport java.math.*;\r\n/**\r\n * <p>\r\n * ${table.comment!}\r\n * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<#if entityLombokModel>\r\n@Data\r\n    <#if superEntityClass??>\r\n@EqualsAndHashCode(callSuper = true)\r\n    <#else>\r\n@EqualsAndHashCode(callSuper = false)\r\n    </#if>\r\n@Accessors(chain = true)\r\n</#if>\r\n<#if swagger2>\r\n@ApiModel(value=\"${entity}对象\", description=\"${table.comment!}\")\r\n</#if>\r\n<#if superEntityClass??>\r\npublic class ${entity}QueryVO extends ${superEntityClass} implements Serializable {\r\n<#else>\r\npublic class ${entity}QueryVO implements Serializable {\r\n</#if>\r\n\r\n<#if entitySerialVersionUID>\r\n    private static final long serialVersionUID = 1L;\r\n</#if>\r\n<#-- ----------  BEGIN 字段循环遍历  ---------->\r\n<#list table.fields as field>\r\n    <#if field.keyFlag>\r\n        <#assign keyPropertyName=\"${field.propertyName}\"/>\r\n    </#if>\r\n\r\n    <#if field.comment!?length gt 0>\r\n    /**\r\n     * ${field.comment}\r\n     */\r\n    </#if>\r\n    <#-- 乐观锁注解 -->\r\n    <#if (versionFieldName!\"\") == field.name>\r\n    @Version\r\n    </#if>\r\n    <#-- 逻辑删除注解 -->\r\n    <#if (logicDeleteFieldName!\"\") == field.name>\r\n    @TableLogic\r\n    </#if>\r\n    private <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName};\r\n\r\n    <#if field.customMap[\'customFieldInfo\'][\'queryMethod\']?? && field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \"BETWEEN\"  >\r\n        <#if field.comment!?length gt 0>\r\n    /**\r\n     * ${field.comment}开始\r\n     */\r\n    </#if>\r\n    private <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}Start;\r\n    <#if field.comment!?length gt 0>\r\n    /**\r\n     * ${field.comment}结束\r\n     */\r\n     </#if>\r\n    private <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}End;\r\n    </#if>\r\n</#list>\r\n<#------------  END 字段循环遍历  ---------->\r\n\r\n<#if !entityLombokModel>\r\n    <#list table.fields as field>\r\n        <#if field.propertyType == \"boolean\">\r\n            <#assign getprefix=\"is\"/>\r\n        <#else>\r\n            <#assign getprefix=\"get\"/>\r\n        </#if>\r\n    public <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${getprefix}${field.capitalName}() {\r\n        return ${field.propertyName};\r\n    }\r\n\r\n    <#if entityBuilderModel>\r\n    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {\r\n    <#else>\r\n    public void set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n    </#if>\r\n        this.${field.propertyName} = ${field.propertyName};\r\n        <#if entityBuilderModel>\r\n        return this;\r\n        </#if>\r\n    }\r\n    </#list>\r\n</#if>\r\n\r\n<#if entityColumnConstant>\r\n    <#list table.fields as field>\r\n    public static final String ${field.name?upper_case} = \"${field.name}\";\r\n\r\n    </#list>\r\n</#if>\r\n    /**\r\n     *  当前页码\r\n     */\r\n    private Integer pageIndex;\r\n\r\n    /**\r\n     * 每页展示数量\r\n     */\r\n    private Integer pageSize;\r\n\r\n<#if !entityLombokModel>\r\n    @Override\r\n    public String toString() {\r\n        return \"${entity}{\" +\r\n    <#list table.fields as field>\r\n        <#if field_index==0>\r\n            \"${field.propertyName}=\" + ${field.propertyName} +\r\n        <#else>\r\n            \", ${field.propertyName}=\" + ${field.propertyName} +\r\n        </#if>\r\n    </#list>\r\n        \"}\";\r\n    }\r\n</#if>\r\n}\r\n', '1', '/vo/request/%sQueryVO.java', '/templates/queryVO.java.ftl', '1', '', '', '1', '0', '', '2021-03-01 15:21:07', '2021-03-05 10:41:46');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('10', 'saveOrUpdateDTO.java.ftl', 'package ${cfg.dtoRequest};\r\n\r\n<#list table.importPackages as pkg>\r\nimport ${pkg};\r\n</#list>\r\n<#if swagger2>\r\nimport io.swagger.annotations.ApiModel;\r\nimport io.swagger.annotations.ApiModelProperty;\r\n</#if>\r\n<#if entityLombokModel>\r\nimport lombok.Data;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.experimental.Accessors;\r\n</#if>\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport java.math.*;\r\n/**\r\n * <p>\r\n    * ${table.comment!}\r\n    * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<#if entityLombokModel>\r\n@Data\r\n    <#if superEntityClass??>\r\n@EqualsAndHashCode(callSuper = true)\r\n    <#else>\r\n@EqualsAndHashCode(callSuper = false)\r\n    </#if>\r\n@Accessors(chain = true)\r\n</#if>\r\n<#if swagger2>\r\n@ApiModel(value=\"${entity}对象\", description=\"${table.comment!}\")\r\n</#if>\r\n<#if superEntityClass??>\r\npublic class ${entity}SaveOrUpdateDTO extends ${superEntityClass} implements Serializable {\r\n<#else>\r\npublic class ${entity}SaveOrUpdateDTO implements Serializable {\r\n</#if>\r\n\r\n<#if entitySerialVersionUID>\r\n    private static final long serialVersionUID = 1L;\r\n</#if>\r\n<#-- ----------  BEGIN 字段循环遍历  ---------->\r\n<#list table.fields as field>\r\n    <#if field.keyFlag>\r\n        <#assign keyPropertyName=\"${field.propertyName}\"/>\r\n    </#if>\r\n\r\n    <#if field.comment!?length gt 0>\r\n    /**\r\n     * ${field.comment}\r\n     */\r\n    </#if>\r\n<#-- 乐观锁注解 -->\r\n    <#if (versionFieldName!\"\") == field.name>\r\n    @Version\r\n    </#if>\r\n<#-- 逻辑删除注解 -->\r\n    <#if (logicDeleteFieldName!\"\") == field.name>\r\n    @TableLogic\r\n    </#if>\r\n    private <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName};\r\n</#list>\r\n<#------------  END 字段循环遍历  ---------->\r\n\r\n<#if !entityLombokModel>\r\n    <#list table.fields as field>\r\n        <#if field.propertyType == \"boolean\">\r\n            <#assign getprefix=\"is\"/>\r\n        <#else>\r\n            <#assign getprefix=\"get\"/>\r\n        </#if>\r\n    public ${field.propertyType} ${getprefix}${field.capitalName}() {\r\n        return ${field.propertyName};\r\n    }\r\n\r\n        <#if entityBuilderModel>\r\n    public ${entity} set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n        <#else>\r\n    public void set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n        </#if>\r\n        this.${field.propertyName} = ${field.propertyName};\r\n        <#if entityBuilderModel>\r\n        return this;\r\n        </#if>\r\n    }\r\n    </#list>\r\n</#if>\r\n\r\n<#if entityColumnConstant>\r\n    <#list table.fields as field>\r\n    public static final String ${field.name?upper_case} = \"${field.name}\";\r\n\r\n    </#list>\r\n</#if>\r\n\r\n<#if !entityLombokModel>\r\n    @Override\r\n    public String toString() {\r\n        return \"${entity}{\" +\r\n    <#list table.fields as field>\r\n        <#if field_index==0>\r\n            \"${field.propertyName}=\" + ${field.propertyName} +\r\n        <#else>\r\n            \", ${field.propertyName}=\" + ${field.propertyName} +\r\n        </#if>\r\n    </#list>\r\n        \"}\";\r\n    }\r\n</#if>\r\n}\r\n', '1', '/dto/request/%sSaveOrUpdateDTO.java', '/templates/saveOrUpdateDTO.java.ftl', '1', '', '', '1', '0', '', '2021-03-01 15:21:38', '2021-03-05 10:41:52');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('11', 'saveOrUpdateVO.java.ftl', 'package ${cfg.voRequest};\r\n\r\n<#list table.importPackages as pkg>\r\nimport ${pkg};\r\n</#list>\r\n<#if swagger2>\r\nimport io.swagger.annotations.ApiModel;\r\nimport io.swagger.annotations.ApiModelProperty;\r\n</#if>\r\n<#if entityLombokModel>\r\nimport lombok.Data;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.experimental.Accessors;\r\n</#if>\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport java.math.*;\r\n/**\r\n * <p>\r\n    * ${table.comment!}\r\n    * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<#if entityLombokModel>\r\n@Data\r\n    <#if superEntityClass??>\r\n@EqualsAndHashCode(callSuper = true)\r\n    <#else>\r\n@EqualsAndHashCode(callSuper = false)\r\n    </#if>\r\n@Accessors(chain = true)\r\n</#if>\r\n<#if superEntityClass??>\r\npublic class ${entity}SaveOrUpdateVO extends ${superEntityClass} implements Serializable {\r\n<#else>\r\npublic class ${entity}SaveOrUpdateVO implements Serializable {\r\n</#if>\r\n\r\n<#if entitySerialVersionUID>\r\n    private static final long serialVersionUID = 1L;\r\n</#if>\r\n<#-- ----------  BEGIN 字段循环遍历  ---------->\r\n<#list table.fields as field>\r\n    <#if field.keyFlag>\r\n        <#assign keyPropertyName=\"${field.propertyName}\"/>\r\n    </#if>\r\n\r\n    <#if field.comment!?length gt 0>\r\n    /**\r\n     * ${field.comment}\r\n     */\r\n    </#if>\r\n    private <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName};\r\n</#list>\r\n<#------------  END 字段循环遍历  ---------->\r\n\r\n<#if !entityLombokModel>\r\n    <#list table.fields as field>\r\n        <#if field.propertyType == \"boolean\">\r\n            <#assign getprefix=\"is\"/>\r\n        <#else>\r\n            <#assign getprefix=\"get\"/>\r\n        </#if>\r\n    public <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${getprefix}${field.capitalName}() {\r\n        return ${field.propertyName};\r\n    }\r\n\r\n        <#if entityBuilderModel>\r\n    public ${entity} set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n        <#else>\r\n    public void set${field.capitalName}(<#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName}) {\r\n        </#if>\r\n        this.${field.propertyName} = ${field.propertyName};\r\n        <#if entityBuilderModel>\r\n        return this;\r\n        </#if>\r\n    }\r\n    </#list>\r\n</#if>\r\n\r\n<#if entityColumnConstant>\r\n    <#list table.fields as field>\r\n    public static final String ${field.name?upper_case} = \"${field.name}\";\r\n\r\n    </#list>\r\n</#if>\r\n\r\n\r\n<#if !entityLombokModel>\r\n    @Override\r\n    public String toString() {\r\n        return \"${entity}{\" +\r\n    <#list table.fields as field>\r\n        <#if field_index==0>\r\n            \"${field.propertyName}=\" + ${field.propertyName} +\r\n        <#else>\r\n            \", ${field.propertyName}=\" + ${field.propertyName} +\r\n        </#if>\r\n    </#list>\r\n        \"}\";\r\n    }\r\n</#if>\r\n}\r\n', '1', '/vo/request/%sSaveOrUpdateVO.java', '/templates/saveOrUpdateVO.java.ftl', '1', '', '', '1', '0', '', '2021-03-01 15:21:57', '2021-03-05 10:41:57');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('12', 'service.java.ftl', 'package ${package.Service};\r\n\r\nimport ${package.Entity}.${entity}DO;\r\nimport ${superServiceClassPackage};\r\nimport com.github.pagehelper.PageInfo;\r\nimport com.pig.easy.bpm.common.generator.BaseService;\r\nimport com.pig.easy.bpm.common.utils.Result;\r\nimport ${cfg.dtoRequest}.*;\r\nimport ${cfg.dtoResponse}.*;\r\nimport java.util.List;\r\n/**\r\n * <p>\r\n * ${table.comment!} 服务类\r\n * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<#if kotlin>\r\ninterface ${table.serviceName} : ${superServiceClass}<${entity}DO>\r\n<#else>\r\npublic interface ${table.serviceName} extends ${superServiceClass}<${entity}DO> {\r\n\r\n    Result<PageInfo<${entity}DTO>> getListPageByCondition(${entity}QueryDTO param);\r\n\r\n    Result<Integer> insert${entity}(${entity}SaveOrUpdateDTO param);\r\n\r\n    Result<Integer> update${entity}(${entity}SaveOrUpdateDTO param);\r\n\r\n    Result<Integer> delete${entity}(${entity}SaveOrUpdateDTO param);\r\n\r\n    <#list table.fields as field>\r\n        <#if field.keyFlag>\r\n    Result<${entity}DTO> get${entity}ById(${field.propertyType} ${field.propertyName});\r\n        </#if>\r\n    </#list>\r\n\r\n    Result<List<${entity}DTO>> getListByCondition(${entity}QueryDTO param);\r\n}\r\n</#if>\r\n', '1', '/service/%sService.java', '/templates/service.java.ftl', '1', '', '', '1', '0', '', '2021-03-01 15:22:21', '2021-03-05 10:36:46');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('13', 'serviceImpl.java.ftl', 'package ${package.ServiceImpl};\r\n\r\nimport ${package.Entity}.${entity}DO;\r\nimport ${package.Mapper}.${table.mapperName};\r\nimport ${package.Service}.${table.serviceName};\r\nimport ${superServiceImplClassPackage};\r\nimport org.springframework.stereotype.Service;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\r\n\r\nimport com.github.pagehelper.PageHelper;\r\nimport com.github.pagehelper.PageInfo;\r\nimport com.pig.easy.bpm.common.entityError.EntityError;\r\nimport com.pig.easy.bpm.common.generator.BaseServiceImpl;\r\nimport com.pig.easy.bpm.common.utils.BeanUtils;\r\nimport com.pig.easy.bpm.common.utils.CommonUtils;\r\nimport com.pig.easy.bpm.common.utils.Result;\r\nimport org.apache.commons.lang3.StringUtils;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport ${cfg.dtoRequest}.*;\r\nimport ${cfg.dtoResponse}.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n/**\r\n * <p>\r\n * ${table.comment!} 服务实现类\r\n * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n@Service\r\n<#if kotlin>\r\nopen class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}DO>(), ${table.serviceName} {\r\n\r\n}\r\n<#else>\r\npublic class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}DO> implements ${table.serviceName} {\r\n\r\n    @Autowired\r\n    ${table.mapperName} mapper;\r\n\r\n    @Override\r\n    public Result<PageInfo<${entity}DTO>> getListPageByCondition(${entity}QueryDTO param) {\r\n\r\n        if (param == null) {\r\n            return Result.responseError(EntityError.ILLEGAL_ARGUMENT_ERROR);\r\n        }\r\n        int pageIndex = CommonUtils.evalInt(param.getPageIndex(), DEFAULT_PAGE_INDEX);\r\n        int pageSize = CommonUtils.evalInt(param.getPageSize(), DEFAULT_PAGE_SIZE);\r\n\r\n        PageHelper.startPage(pageIndex, pageSize);\r\n        param.setValidState(VALID_STATE);\r\n        List<${entity}DTO> list = mapper.getListByCondition(param);\r\n        if (list == null) {\r\n            list = new ArrayList<>();\r\n        }\r\n        PageInfo<${entity}DTO> pageInfo = new PageInfo<>(list);\r\n        return Result.responseSuccess(pageInfo);\r\n    }\r\n\r\n    @Override\r\n    public Result<List<${entity}DTO>> getListByCondition(${entity}QueryDTO param) {\r\n\r\n        if (param == null) {\r\n            return Result.responseError(EntityError.ILLEGAL_ARGUMENT_ERROR);\r\n        }\r\n\r\n        param.setValidState(VALID_STATE);\r\n        List<${entity}DTO> list = mapper.getListByCondition(param);\r\n        if (list == null) {\r\n            list = new ArrayList<>();\r\n        }\r\n        return Result.responseSuccess(list);\r\n    }\r\n\r\n\r\n    @Override\r\n    public Result<Integer> insert${entity}(${entity}SaveOrUpdateDTO param){\r\n\r\n        if (param == null) {\r\n            return Result.responseError(EntityError.ILLEGAL_ARGUMENT_ERROR);\r\n        }\r\n        ${entity}DO temp = BeanUtils.switchToDO(param, ${entity}DO.class);\r\n        Integer num = mapper.insert(temp);\r\n        return Result.responseSuccess(num);\r\n    }\r\n\r\n    @Override\r\n    public Result<Integer>update${entity}(${entity}SaveOrUpdateDTO param){\r\n\r\n        if (param == null) {\r\n            return Result.responseError(EntityError.ILLEGAL_ARGUMENT_ERROR);\r\n        }\r\n\r\n        ${entity}DO temp = BeanUtils.switchToDO(param, ${entity}DO.class);\r\n        Integer num = mapper.updateById(temp);\r\n        return Result.responseSuccess(num);\r\n    }\r\n\r\n    @Override\r\n    public Result<Integer>delete${entity}(${entity}SaveOrUpdateDTO param){\r\n\r\n        if (param == null) {\r\n            return Result.responseError(EntityError.ILLEGAL_ARGUMENT_ERROR);\r\n        }\r\n\r\n        ${entity}DO temp = BeanUtils.switchToDO(param, ${entity}DO.class);\r\n        temp.setValidState(INVALID_STATE);\r\n        Integer num = mapper.updateById(temp);\r\n        return Result.responseSuccess(num);\r\n    }\r\n\r\n    @Override\r\n    <#list table.fields as field>\r\n        <#if field.keyFlag>\r\n    public Result<${entity}DTO> get${entity}ById(${field.propertyType} ${field.propertyName}){\r\n\r\n        if (${field.propertyName} == null) {\r\n            return Result.responseError(EntityError.ILLEGAL_ARGUMENT_ERROR);\r\n        }\r\n\r\n        ${entity}DO query = new ${entity}DO();\r\n        query.set${field.capitalName}(${field.propertyName});\r\n        query = mapper.selectOne(new QueryWrapper<>(query));\r\n\r\n        if (query == null) {\r\n            return Result.responseError(EntityError.DATA_NOT_FOUND_ERROR);\r\n        }\r\n        ${entity}DTO result = BeanUtils.switchToDTO(query, ${entity}DTO.class);\r\n        return Result.responseSuccess(result);\r\n    }\r\n        </#if>\r\n    </#list>\r\n}\r\n</#if>\r\n', '1', '/service/impl/%sServiceImpl.java', '/templates/serviceImpl.java.ftl', '1', '', '', '1', '0', '', '2021-03-01 15:22:40', '2021-03-05 10:42:24');
INSERT INTO `easy_bpm_generator`.`code_template` (`template_id`, `template_name`, `template_content`, `template_type`, `output_file_name`, `template_path`, `template_group_id`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('14', 'downloadDTO.java.ftl', 'package ${cfg.dtoResponse};\r\n\r\n<#list table.importPackages as pkg>\r\nimport ${pkg};\r\n</#list>\r\n<#if entityLombokModel>\r\nimport lombok.Data;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.experimental.Accessors;\r\n</#if>\r\nimport com.alibaba.excel.annotation.*;\r\nimport java.io.Serializable;\r\nimport java.util.Date;\r\nimport java.math.*;\r\n/**\r\n * <p>\r\n    * ${table.comment!}\r\n    * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<#if entityLombokModel>\r\n@Data\r\n    <#if superEntityClass??>\r\n@EqualsAndHashCode(callSuper = true)\r\n    <#else>\r\n@EqualsAndHashCode(callSuper = false)\r\n    </#if>\r\n@Accessors(chain = true)\r\n</#if>\r\npublic class ${entity}ExportDTO implements Serializable {\r\n\r\n<#if entitySerialVersionUID>\r\n    @ExcelIgnore\r\n    private static final long serialVersionUID = 1L;\r\n</#if>\r\n<#-- ----------  BEGIN 字段循环遍历  ---------->\r\n<#list table.fields as field>\r\n\r\n    <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'downloadFlag\'] == 1 >\r\n    <#if field.comment!?length gt 0>\r\n    /**\r\n     * ${field.comment}\r\n     */\r\n    </#if>\r\n    @ExcelProperty( value = \"<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']}<#else>${field.comment}</#if>\")\r\n    private <#if field.customMap[\'customFieldInfo\'] ?? && field.customMap[\'customFieldInfo\'][\'propertyType\']?? >${field.customMap[\'customFieldInfo\'][\'propertyType\']} <#else>${field.propertyType}</#if> ${field.propertyName};\r\n    </#if>\r\n</#list>\r\n<#------------  END 字段循环遍历  ---------->\r\n}\r\n', '1', '/dto/response/%sExportDTO.java', '/templates/downloadDTO.java.ftl', '1', '', '', '1', '0', '', '2021-03-04 16:03:48', '2021-03-05 10:36:49');

-- ----------------------------
-- Table data for code_template_group
-- ----------------------------
INSERT INTO `easy_bpm_generator`.`code_template_group` (`template_group_id`, `template_group_code`, `template_group_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('1', 'easyBpmTemplate', 'easyBpm 模板', '1', '<p>勿动</p>', '1', '0', '', '2021-03-09 18:12:04', '2021-03-09 18:12:04');

-- ----------------------------
-- Table data for code_version
-- ----------------------------
INSERT INTO `easy_bpm_generator`.`code_version` (`id`, `name`, `value`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('1', 'schema.version', '1.0.0', '', '1', '0', '', '2021-03-10 15:45:47', '2021-03-10 15:45:47');




INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template_group', 'template_group_id', '', 'auto_increment', 'select,insert,update,references', '', '模板组编号', '模板组编号', 'Long', 'templateGroupId', 'bigint(20)', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:49', '2021-03-04 15:24:49');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template_group', 'template_group_code', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模板组编码', '模板组编码', 'String', 'templateGroupCode', 'varchar(128)', '0', '0', '1', '1', 'LIKE', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template_group', 'template_group_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模板组名称', '模板组名称', 'String', 'templateGroupName', 'varchar(100)', '0', '0', '1', '1', 'LIKE', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template_group', 'tenant_id', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '租户编号', '租户编号', 'String', 'tenantId', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template_group', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'editor', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template_group', 'valid_state', '', '', 'select,insert,update,references', '1', '状态 1 有效 0 失效', '状态', 'Integer', 'validState', 'tinyint(3) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'switch(0,1)', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template_group', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Integer', 'operatorId', 'int(20) unsigned', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template_group', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template_group', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '0', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template_group', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'template_id', '', 'auto_increment', 'select,insert,update,references', '', '模板编号', '模板编号', 'Long', 'templateId', 'bigint(20)', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'template_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模板名称', '模板名称', 'String', 'templateName', 'varchar(100)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'template_content', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模板内容', '模板内容', 'String', 'templateContent', 'text', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'textarea', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'template_type', '', '', 'select,insert,update,references', '1', '模板类型 1 后端 0 前端', '模板类型 1 后端 0 前端', 'Integer', 'templateType', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'output_file_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '自定义输入文件名称', '自定义输入文件名称', 'String', 'outputFileName', 'varchar(2000)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'template_path', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模板路径', '模板路径', 'String', 'templatePath', 'varchar(2000)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'template_group_id', '', '', 'select,insert,update,references', '0', '模板组编号', '模板组编号', 'Long', 'templateGroupId', 'bigint(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'tenant_id', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '租户编号', '租户编号', 'String', 'tenantId', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'valid_state', '', '', 'select,insert,update,references', '1', '状态 1 有效 0 失效', '状态 1 有效 0 失效', 'Integer', 'validState', 'tinyint(3) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Integer', 'operatorId', 'int(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_template', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'config_id', '', 'auto_increment', 'select,insert,update,references', '', '配置编号', '配置编号', 'Long', 'configId', 'bigint(20)', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:40', '2021-03-08 17:46:40');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'db_id', '', '', 'select,insert,update,references', '0', '数据源ID', '数据源ID', 'Long', 'dbId', 'bigint(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:40', '2021-03-08 17:46:40');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'table_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '表名称', '表名称', 'String', 'tableName', 'varchar(100)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'author', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '作者', '作者', 'String', 'author', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'context_path', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '项目路径', '项目路径', 'String', 'contextPath', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'module_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模块名称', '模块名称', 'String', 'moduleName', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'parent_package', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '公共父级包名', '公共父级包名', 'String', 'parentPackage', 'varchar(512)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'table_prefix', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '表名前缀', '表名前缀', 'String', 'tablePrefix', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'field_prefix', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '字段前缀', '字段前缀', 'String', 'fieldPrefix', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'project_path', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '后端路径', '后端路径', 'String', 'projectPath', 'varchar(2000)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'vue_path', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '前端路径', '前端路径', 'String', 'vuePath', 'varchar(2000)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'override', '', '', 'select,insert,update,references', '0', '是否覆盖 1 是 0 否', '是否覆盖 1 是 0 否', 'Integer', 'override', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'parent_menu_id', '', '', 'select,insert,update,references', '0', '父级菜单编号', '父级菜单编号', 'Long', 'parentMenuId', 'bigint(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'controller_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'controller 命名规则', 'controller 命名规则', 'String', 'controllerName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'service_impl_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'impl命名规则', 'impl命名规则', 'String', 'serviceImplName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'service_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'service 命名规则', 'service 命名规则', 'String', 'serviceName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'xml_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'xml 命名规则', 'xml 命名规则', 'String', 'xmlName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'mapper_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'mapper 命名规则', 'mapper 命名规则', 'String', 'mapperName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'entity_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '实体类 命名规则', '实体类 命名规则', 'String', 'entityName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'super_entity_class', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '自定义实体父类', '自定义实体父类', 'String', 'superEntityClass', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'super_mapper_class', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '自定义 mapper 父类', '自定义 mapper 父类', 'String', 'superMapperClass', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'super_service_class', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'service 父类', 'service 父类', 'String', 'superServiceClass', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'super_service_impl_class', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'service 实现类父类', 'service 实现类父类', 'String', 'superServiceImplClass', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'super_controller_class', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'controller 父类', 'controller 父类', 'String', 'superControllerClass', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'tenant_id', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '租户编号', '租户编号', 'String', 'tenantId', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'valid_state', '', '', 'select,insert,update,references', '1', '状态 1 有效 0 失效', '状态 1 有效 0 失效', 'Integer', 'validState', 'tinyint(3) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Integer', 'operatorId', 'int(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_table_strategy_config', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'column_id', '', 'auto_increment', 'select,insert,update,references', '', '列序号', '列序号', 'Long', 'columnId', 'bigint(20) unsigned', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'db_id', '', '', 'select,insert,update,references', '0', '数据源ID', '数据源ID', 'Long', 'dbId', 'bigint(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'table_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '表名', '表名', 'String', 'tableName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'column_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '字段名', '字段名', 'String', 'columnName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'collation', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '编码', '编码', 'String', 'collation', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'extra', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '额外参数', '额外参数', 'String', 'extra', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'privileges', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '权限', '权限', 'String', 'privileges', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'default_value', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '默认值', '默认值', 'String', 'defaultValue', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'column_comment', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '字段描述', '字段描述', 'String', 'columnComment', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'form_label', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '标签名称', '标签名称', 'String', 'formLabel', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'property_type', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'Java字段类型', 'Java字段类型', 'String', 'propertyType', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'property_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '字段属性名', '字段属性名', 'String', 'propertyName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'column_type', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '字段类型', '字段类型', 'String', 'columnType', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'key_flag', '', '', 'select,insert,update,references', '0', '主键 1 是 0 否', '主键 1 是 0 否', 'Integer', 'keyFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'key_identity_flag', '', '', 'select,insert,update,references', '0', '自增列 1 是 0 否', '自增列 1 是 0 否', 'Integer', 'keyIdentityFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'not_null', '', '', 'select,insert,update,references', '0', '必填 1 是 0 否', '必填 1 是 0 否', 'Integer', 'notNull', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'query_flag', '', '', 'select,insert,update,references', '0', '查询条件 1 是 0 否', '查询条件 1 是 0 否', 'Integer', 'queryFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'query_method', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '查询方式', '查询方式', 'String', 'queryMethod', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'insert_flag', '', '', 'select,insert,update,references', '1', '插入是否显示 1 是 0 否', '插入是否显示 1 是 0 否', 'Integer', 'insertFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'update_flag', '', '', 'select,insert,update,references', '1', '更新是否显示 1 是 0 否', '更新是否显示 1 是 0 否', 'Integer', 'updateFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'list_flag', '', '', 'select,insert,update,references', '1', '查询是否显示 1 是 0 否', '查询是否显示 1 是 0 否', 'Integer', 'listFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'download_flag', '', '', 'select,insert,update,references', '1', '下载是否显示 1 是 0 否', '下载是否显示 1 是 0 否', 'Integer', 'downloadFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'validate_type', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '校验类型', '校验类型', 'String', 'validateType', 'varchar(64)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'validate_max_length', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '校验 最大长度', '校验 最大长度', 'String', 'validateMaxLength', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'validate_min_length', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '校验 最小长度', '校验 最小长度', 'String', 'validateMinLength', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'validate_max_value', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '校验 最大值', '校验 最大值', 'String', 'validateMaxValue', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'validate_min_value', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '校验 最小值', '校验 最小值', 'String', 'validateMinValue', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'form_type', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '表单类型', '表单类型', 'String', 'formType', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'dict_code', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '关联字典编码', '关联字典编码', 'String', 'dictCode', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'dict_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '关联字典名称', '关联字典名称', 'String', 'dictName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'tenant_id', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '租户编号', '租户编号', 'String', 'tenantId', 'varchar(64)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'valid_state', '', '', 'select,insert,update,references', '1', '状态 1 有效 0 失效', '状态 1 有效 0 失效', 'Integer', 'validState', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Integer', 'operatorId', 'int(11)', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(128)', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_column', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'db_id', '', 'auto_increment', 'select,insert,update,references', '', '数据源编号', '数据源编号', 'Long', 'dbId', 'bigint(20)', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'db_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '数据源名称', '数据源名称', 'String', 'dbName', 'varchar(128)', '0', '0', '1', '1', 'LIKE', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'db_url', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'url', 'url', 'String', 'dbUrl', 'varchar(2000)', '0', '0', '1', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'db_username', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '用户名', '用户名', 'String', 'dbUsername', 'varchar(128)', '0', '0', '1', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'db_password', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '密码', '密码', 'String', 'dbPassword', 'varchar(255)', '0', '0', '1', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'db_type', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '数据源类型', '数据源类型', 'String', 'dbType', 'varchar(255)', '0', '0', '1', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'db_catalog', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '登记目录', '登记目录', 'String', 'dbCatalog', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'db_schema_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '数据源库名', '数据源库名', 'String', 'dbSchemaName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'db_driver_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '驱动名称', '驱动名称', 'String', 'dbDriverName', 'varchar(255)', '0', '0', '1', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'tenant_id', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '租户编号', '租户编号', 'String', 'tenantId', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'valid_state', '', '', 'select,insert,update,references', '1', '状态 1 有效 0 失效', '状态 1 有效 0 失效', 'Integer', 'validState', 'tinyint(3) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'switch(0,1)', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Integer', 'operatorId', 'int(20) unsigned', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` ( `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ( '2', 'code_db_config', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');


INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('1', '2', 'code_template_group', 'template_group_id', '', 'auto_increment', 'select,insert,update,references', '', '模板组编号', '模板组编号', 'Long', 'templateGroupId', 'bigint(20)', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:49', '2021-03-04 15:24:49');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('2', '2', 'code_template_group', 'template_group_code', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模板组编码', '模板组编码', 'String', 'templateGroupCode', 'varchar(128)', '0', '0', '1', '1', 'LIKE', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('3', '2', 'code_template_group', 'template_group_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模板组名称', '模板组名称', 'String', 'templateGroupName', 'varchar(100)', '0', '0', '1', '1', 'LIKE', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('4', '2', 'code_template_group', 'tenant_id', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '租户编号', '租户编号', 'String', 'tenantId', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('5', '2', 'code_template_group', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'editor', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('6', '2', 'code_template_group', 'valid_state', '', '', 'select,insert,update,references', '1', '状态 1 有效 0 失效', '状态', 'Integer', 'validState', 'tinyint(3) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'switch(0,1)', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('7', '2', 'code_template_group', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Integer', 'operatorId', 'int(20) unsigned', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('8', '2', 'code_template_group', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('9', '2', 'code_template_group', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '0', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('10', '2', 'code_template_group', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-04 15:24:50', '2021-03-04 15:24:50');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('11', '2', 'code_template', 'template_id', '', 'auto_increment', 'select,insert,update,references', '', '模板编号', '模板编号', 'Long', 'templateId', 'bigint(20)', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('12', '2', 'code_template', 'template_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模板名称', '模板名称', 'String', 'templateName', 'varchar(100)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('13', '2', 'code_template', 'template_content', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模板内容', '模板内容', 'String', 'templateContent', 'text', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'textarea', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('14', '2', 'code_template', 'template_type', '', '', 'select,insert,update,references', '1', '模板类型 1 后端 0 前端', '模板类型 1 后端 0 前端', 'Integer', 'templateType', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('15', '2', 'code_template', 'output_file_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '自定义输入文件名称', '自定义输入文件名称', 'String', 'outputFileName', 'varchar(2000)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('16', '2', 'code_template', 'template_path', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模板路径', '模板路径', 'String', 'templatePath', 'varchar(2000)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('17', '2', 'code_template', 'template_group_id', '', '', 'select,insert,update,references', '0', '模板组编号', '模板组编号', 'Long', 'templateGroupId', 'bigint(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('18', '2', 'code_template', 'tenant_id', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '租户编号', '租户编号', 'String', 'tenantId', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('19', '2', 'code_template', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('20', '2', 'code_template', 'valid_state', '', '', 'select,insert,update,references', '1', '状态 1 有效 0 失效', '状态 1 有效 0 失效', 'Integer', 'validState', 'tinyint(3) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('21', '2', 'code_template', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Integer', 'operatorId', 'int(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('22', '2', 'code_template', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('23', '2', 'code_template', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('24', '2', 'code_template', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-04 21:37:16', '2021-03-04 21:37:16');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('25', '2', 'code_table_strategy_config', 'config_id', '', 'auto_increment', 'select,insert,update,references', '', '配置编号', '配置编号', 'Long', 'configId', 'bigint(20)', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:40', '2021-03-08 17:46:40');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('26', '2', 'code_table_strategy_config', 'db_id', '', '', 'select,insert,update,references', '0', '数据源ID', '数据源ID', 'Long', 'dbId', 'bigint(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:40', '2021-03-08 17:46:40');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('27', '2', 'code_table_strategy_config', 'table_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '表名称', '表名称', 'String', 'tableName', 'varchar(100)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('28', '2', 'code_table_strategy_config', 'author', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '作者', '作者', 'String', 'author', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('29', '2', 'code_table_strategy_config', 'context_path', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '项目路径', '项目路径', 'String', 'contextPath', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('30', '2', 'code_table_strategy_config', 'module_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '模块名称', '模块名称', 'String', 'moduleName', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('31', '2', 'code_table_strategy_config', 'parent_package', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '公共父级包名', '公共父级包名', 'String', 'parentPackage', 'varchar(512)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('32', '2', 'code_table_strategy_config', 'table_prefix', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '表名前缀', '表名前缀', 'String', 'tablePrefix', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('33', '2', 'code_table_strategy_config', 'field_prefix', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '字段前缀', '字段前缀', 'String', 'fieldPrefix', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('34', '2', 'code_table_strategy_config', 'project_path', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '后端路径', '后端路径', 'String', 'projectPath', 'varchar(2000)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('35', '2', 'code_table_strategy_config', 'vue_path', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '前端路径', '前端路径', 'String', 'vuePath', 'varchar(2000)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('36', '2', 'code_table_strategy_config', 'override', '', '', 'select,insert,update,references', '0', '是否覆盖 1 是 0 否', '是否覆盖 1 是 0 否', 'Integer', 'override', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('37', '2', 'code_table_strategy_config', 'parent_menu_id', '', '', 'select,insert,update,references', '0', '父级菜单编号', '父级菜单编号', 'Long', 'parentMenuId', 'bigint(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('38', '2', 'code_table_strategy_config', 'controller_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'controller 命名规则', 'controller 命名规则', 'String', 'controllerName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('39', '2', 'code_table_strategy_config', 'service_impl_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'impl命名规则', 'impl命名规则', 'String', 'serviceImplName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('40', '2', 'code_table_strategy_config', 'service_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'service 命名规则', 'service 命名规则', 'String', 'serviceName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('41', '2', 'code_table_strategy_config', 'xml_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'xml 命名规则', 'xml 命名规则', 'String', 'xmlName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('42', '2', 'code_table_strategy_config', 'mapper_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'mapper 命名规则', 'mapper 命名规则', 'String', 'mapperName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('43', '2', 'code_table_strategy_config', 'entity_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '实体类 命名规则', '实体类 命名规则', 'String', 'entityName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('44', '2', 'code_table_strategy_config', 'super_entity_class', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '自定义实体父类', '自定义实体父类', 'String', 'superEntityClass', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('45', '2', 'code_table_strategy_config', 'super_mapper_class', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '自定义 mapper 父类', '自定义 mapper 父类', 'String', 'superMapperClass', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('46', '2', 'code_table_strategy_config', 'super_service_class', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'service 父类', 'service 父类', 'String', 'superServiceClass', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('47', '2', 'code_table_strategy_config', 'super_service_impl_class', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'service 实现类父类', 'service 实现类父类', 'String', 'superServiceImplClass', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('48', '2', 'code_table_strategy_config', 'super_controller_class', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'controller 父类', 'controller 父类', 'String', 'superControllerClass', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('49', '2', 'code_table_strategy_config', 'tenant_id', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '租户编号', '租户编号', 'String', 'tenantId', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('50', '2', 'code_table_strategy_config', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('51', '2', 'code_table_strategy_config', 'valid_state', '', '', 'select,insert,update,references', '1', '状态 1 有效 0 失效', '状态 1 有效 0 失效', 'Integer', 'validState', 'tinyint(3) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('52', '2', 'code_table_strategy_config', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Integer', 'operatorId', 'int(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('53', '2', 'code_table_strategy_config', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('54', '2', 'code_table_strategy_config', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('55', '2', 'code_table_strategy_config', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-08 17:46:41', '2021-03-08 17:46:41');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('56', '2', 'code_column', 'column_id', '', 'auto_increment', 'select,insert,update,references', '', '列序号', '列序号', 'Long', 'columnId', 'bigint(20) unsigned', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('57', '2', 'code_column', 'db_id', '', '', 'select,insert,update,references', '0', '数据源ID', '数据源ID', 'Long', 'dbId', 'bigint(20) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('58', '2', 'code_column', 'table_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '表名', '表名', 'String', 'tableName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('59', '2', 'code_column', 'column_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '字段名', '字段名', 'String', 'columnName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('60', '2', 'code_column', 'collation', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '编码', '编码', 'String', 'collation', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('61', '2', 'code_column', 'extra', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '额外参数', '额外参数', 'String', 'extra', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('62', '2', 'code_column', 'privileges', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '权限', '权限', 'String', 'privileges', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('63', '2', 'code_column', 'default_value', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '默认值', '默认值', 'String', 'defaultValue', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('64', '2', 'code_column', 'column_comment', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '字段描述', '字段描述', 'String', 'columnComment', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('65', '2', 'code_column', 'form_label', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '标签名称', '标签名称', 'String', 'formLabel', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:26:59', '2021-03-09 12:26:59');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('66', '2', 'code_column', 'property_type', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'Java字段类型', 'Java字段类型', 'String', 'propertyType', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('67', '2', 'code_column', 'property_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '字段属性名', '字段属性名', 'String', 'propertyName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('68', '2', 'code_column', 'column_type', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '字段类型', '字段类型', 'String', 'columnType', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('69', '2', 'code_column', 'key_flag', '', '', 'select,insert,update,references', '0', '主键 1 是 0 否', '主键 1 是 0 否', 'Integer', 'keyFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('70', '2', 'code_column', 'key_identity_flag', '', '', 'select,insert,update,references', '0', '自增列 1 是 0 否', '自增列 1 是 0 否', 'Integer', 'keyIdentityFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('71', '2', 'code_column', 'not_null', '', '', 'select,insert,update,references', '0', '必填 1 是 0 否', '必填 1 是 0 否', 'Integer', 'notNull', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('72', '2', 'code_column', 'query_flag', '', '', 'select,insert,update,references', '0', '查询条件 1 是 0 否', '查询条件 1 是 0 否', 'Integer', 'queryFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('73', '2', 'code_column', 'query_method', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '查询方式', '查询方式', 'String', 'queryMethod', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('74', '2', 'code_column', 'insert_flag', '', '', 'select,insert,update,references', '1', '插入是否显示 1 是 0 否', '插入是否显示 1 是 0 否', 'Integer', 'insertFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('75', '2', 'code_column', 'update_flag', '', '', 'select,insert,update,references', '1', '更新是否显示 1 是 0 否', '更新是否显示 1 是 0 否', 'Integer', 'updateFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('76', '2', 'code_column', 'list_flag', '', '', 'select,insert,update,references', '1', '查询是否显示 1 是 0 否', '查询是否显示 1 是 0 否', 'Integer', 'listFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('77', '2', 'code_column', 'download_flag', '', '', 'select,insert,update,references', '1', '下载是否显示 1 是 0 否', '下载是否显示 1 是 0 否', 'Integer', 'downloadFlag', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('78', '2', 'code_column', 'validate_type', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '校验类型', '校验类型', 'String', 'validateType', 'varchar(64)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('79', '2', 'code_column', 'validate_max_length', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '校验 最大长度', '校验 最大长度', 'String', 'validateMaxLength', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('80', '2', 'code_column', 'validate_min_length', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '校验 最小长度', '校验 最小长度', 'String', 'validateMinLength', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('81', '2', 'code_column', 'validate_max_value', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '校验 最大值', '校验 最大值', 'String', 'validateMaxValue', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('82', '2', 'code_column', 'validate_min_value', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '校验 最小值', '校验 最小值', 'String', 'validateMinValue', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('83', '2', 'code_column', 'form_type', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '表单类型', '表单类型', 'String', 'formType', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('84', '2', 'code_column', 'dict_code', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '关联字典编码', '关联字典编码', 'String', 'dictCode', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('85', '2', 'code_column', 'dict_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '关联字典名称', '关联字典名称', 'String', 'dictName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('86', '2', 'code_column', 'tenant_id', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '租户编号', '租户编号', 'String', 'tenantId', 'varchar(64)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('87', '2', 'code_column', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('88', '2', 'code_column', 'valid_state', '', '', 'select,insert,update,references', '1', '状态 1 有效 0 失效', '状态 1 有效 0 失效', 'Integer', 'validState', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('89', '2', 'code_column', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Integer', 'operatorId', 'int(11)', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('90', '2', 'code_column', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(128)', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('91', '2', 'code_column', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('92', '2', 'code_column', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-09 12:27:00', '2021-03-09 12:27:00');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('93', '2', 'code_db_config', 'db_id', '', 'auto_increment', 'select,insert,update,references', '', '数据源编号', '数据源编号', 'Long', 'dbId', 'bigint(20)', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('94', '2', 'code_db_config', 'db_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '数据源名称', '数据源名称', 'String', 'dbName', 'varchar(128)', '0', '0', '1', '1', 'LIKE', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('95', '2', 'code_db_config', 'db_url', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', 'url', 'url', 'String', 'dbUrl', 'varchar(2000)', '0', '0', '1', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('96', '2', 'code_db_config', 'db_username', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '用户名', '用户名', 'String', 'dbUsername', 'varchar(128)', '0', '0', '1', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('97', '2', 'code_db_config', 'db_password', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '密码', '密码', 'String', 'dbPassword', 'varchar(255)', '0', '0', '1', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('98', '2', 'code_db_config', 'db_type', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '数据源类型', '数据源类型', 'String', 'dbType', 'varchar(255)', '0', '0', '1', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('99', '2', 'code_db_config', 'db_catalog', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '登记目录', '登记目录', 'String', 'dbCatalog', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('100', '2', 'code_db_config', 'db_schema_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '数据源库名', '数据源库名', 'String', 'dbSchemaName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('101', '2', 'code_db_config', 'db_driver_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '驱动名称', '驱动名称', 'String', 'dbDriverName', 'varchar(255)', '0', '0', '1', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('102', '2', 'code_db_config', 'tenant_id', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '租户编号', '租户编号', 'String', 'tenantId', 'varchar(128)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('103', '2', 'code_db_config', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('104', '2', 'code_db_config', 'valid_state', '', '', 'select,insert,update,references', '1', '状态 1 有效 0 失效', '状态 1 有效 0 失效', 'Integer', 'validState', 'tinyint(3) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'switch(0,1)', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('105', '2', 'code_db_config', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Integer', 'operatorId', 'int(20) unsigned', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('106', '2', 'code_db_config', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(255)', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('107', '2', 'code_db_config', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('108', '2', 'code_db_config', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-09 18:54:48', '2021-03-09 18:54:48');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('109', '2', 'code_version', 'id', '', 'auto_increment', 'select,insert,update,references', '', '编号', '编号', 'Long', 'id', 'bigint(20)', '1', '1', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-10 17:19:21', '2021-03-10 17:19:21');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('110', '2', 'code_version', 'name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '版本名称', '版本名称', 'String', 'name', 'varchar(255)', '0', '0', '1', '1', 'LIKE', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-10 17:19:21', '2021-03-10 17:19:21');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('111', '2', 'code_version', 'value', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '版本值', '版本值', 'String', 'value', 'varchar(255)', '0', '0', '1', '1', 'LIKE', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-10 17:19:21', '2021-03-10 17:19:21');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('112', '2', 'code_version', 'remarks', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '备注', '备注', 'String', 'remarks', 'varchar(255)', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-10 17:19:21', '2021-03-10 17:19:21');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('113', '2', 'code_version', 'valid_state', '', '', 'select,insert,update,references', '0', '状态 1 有效 0 失效', '状态 1 有效 0 失效', 'Integer', 'validState', 'tinyint(2) unsigned', '0', '0', '0', '0', 'EQ', '1', '1', '1', '1', '', '', '', '', '', 'switch(0,1)', '', '', '', '', '1', '0', '', '2021-03-10 17:19:21', '2021-03-10 17:19:21');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('114', '2', 'code_version', 'operator_id', '', '', 'select,insert,update,references', '0', '操作人工号', '操作人工号', 'Long', 'operatorId', 'bigint(20) unsigned', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-10 17:19:21', '2021-03-10 17:19:21');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('115', '2', 'code_version', 'operator_name', 'utf8mb4_general_ci', '', 'select,insert,update,references', '', '操作人姓名', '操作人姓名', 'String', 'operatorName', 'varchar(128)', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'input', '', '', '', '', '1', '0', '', '2021-03-10 17:19:21', '2021-03-10 17:19:21');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('116', '2', 'code_version', 'create_time', '', '', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '创建时间', '创建时间', 'LocalDateTime', 'createTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-10 17:19:21', '2021-03-10 17:19:21');
INSERT INTO `easy_bpm_generator`.`code_column` (`column_id`, `db_id`, `table_name`, `column_name`, `collation`, `extra`, `privileges`, `default_value`, `column_comment`, `form_label`, `property_type`, `property_name`, `column_type`, `key_flag`, `key_identity_flag`, `not_null`, `query_flag`, `query_method`, `insert_flag`, `update_flag`, `list_flag`, `download_flag`, `validate_type`, `validate_max_length`, `validate_min_length`, `validate_max_value`, `validate_min_value`, `form_type`, `dict_code`, `dict_name`, `tenant_id`, `remarks`, `valid_state`, `operator_id`, `operator_name`, `create_time`, `update_time`) VALUES ('117', '2', 'code_version', 'update_time', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', 'CURRENT_TIMESTAMP', '更新时间', '更新时间', 'LocalDateTime', 'updateTime', 'datetime', '0', '0', '0', '0', 'EQ', '0', '0', '1', '1', '', '', '', '', '', 'date', '', '', '', '', '1', '0', '', '2021-03-10 17:19:22', '2021-03-10 17:19:22');


UPDATE `easy_bpm_generator`.`code_template` SET `template_id`='5', `template_name`='index.ftl', `template_content`='<template>\r\n    <div class=\"app-container\">\r\n        <div>\r\n            <div class=\"filter-container\" v-if=\"showSearch\">\r\n                <el-form :inline=\"true\" :model=\"listQuery\">\r\n                <#list table.fields as field>\r\n                    <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'queryFlag\'] == 1 >\r\n                 <el-form-item label=\"${field.comment}\">\r\n                     <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'textarea\' >\r\n                     <el-input type=\"textarea\" v-model=\"listQuery.${field.propertyName}\" autosize  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\" ></el-input>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'select \' >\r\n                      <el-select v-model=\"listQuery.${field.propertyName}\" placeholder=\"请选择\">\r\n                         <el-option key=\"深圳\" label=\"选项1\" value=\"深圳\"> </el-option>\r\n                         <el-option key=\"上海\" label=\"选项2\" value=\"上海\"> </el-option>\r\n                      </el-select>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'radio\' >\r\n                          <el-radio-group v-model=\"listQuery.${field.propertyName}\" >\r\n                              <el-radio :label=\"3\">备选项</el-radio>\r\n                              <el-radio :label=\"6\">备选项</el-radio>\r\n                              <el-radio :label=\"9\">备选项</el-radio>\r\n                          </el-radio-group>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch\' >\r\n                         <el-switch v-model=\"listQuery.${field.propertyName}\"></el-switch>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch(0,1)\' >\r\n                         <el-switch v-model=\"listQuery.${field.propertyName}\"  :active-value=\"1\" :inactive-value=\"0\"></el-switch>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'checkbox\' >\r\n                        <el-checkbox-group v-model=\"listQuery.${field.propertyName}\">\r\n                            <el-checkbox label=\"复选框 A\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 B\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 C\"></el-checkbox>\r\n                        </el-checkbox-group>\r\n                     <#else >\r\n                         <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'queryMethod\'] == \'BETWEEN\'>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'date\' >\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}Start\"  type=\"date\" placeholder=\"请输入开始<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                           -\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}End\"  type=\"date\" placeholder=\"请输入结束<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'time\' >\r\n                         <el-time-select v-model=\"listQuery.${field.propertyName}Start\"  type=\"date\" placeholder=\"请输入开始<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-time-select>\r\n                            -\r\n                         <el-time-select v-model=\"listQuery.${field.propertyName}End\"  type=\"date\" placeholder=\"请输入结束<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-time-select>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'datetime\' >\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}Start\"  type=\"datetime\" placeholder=\"请输入开始<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                            -\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}End\"  type=\"datetime\" placeholder=\"请输入结束<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#else >\r\n                         <el-input v-model=\"listQuery.${field.propertyName}Start\"  placeholder=\"请输入开始<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\" ></el-input>\r\n                           -\r\n                         <el-input v-model=\"listQuery.${field.propertyName}End\"  placeholder=\"请输入结束<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\" ></el-input>\r\n                             </#if>\r\n                          <#else>\r\n                            <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'date\' >\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                            <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'time\' >\r\n                         <el-time-select v-model=\"listQuery.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-time-select>\r\n                            <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'datetime\' >\r\n                         <el-date-picker v-model=\"listQuery.${field.propertyName}\"  type=\"datetime\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                            <#else >\r\n                         <el-input v-model=\"listQuery.${field.propertyName}\"  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\" ></el-input>\r\n                            </#if>\r\n                         </#if>\r\n                     </#if>\r\n                 </el-form-item>\r\n                    </#if>\r\n                </#list>\r\n                </el-form>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button type=\"success\" @click=\"getList\" icon=\"el-icon-search\" v-waves>查询</el-button>\r\n										<el-button @click=\"download\" icon=\"el-icon-download\" v-waves>导出</el-button>\r\n                    <el-button type=\"primary\" @click=\"handleCreate\" icon=\"el-icon-plus\" v-waves>添加</el-button>\r\n                 </span>\r\n            </div>\r\n            <div class=\"table-container\">\r\n                <el-row :gutter=\"10\" class=\"mb8\">\r\n                    <right-toolbar :showSearch.sync=\"showSearch\" :columns=\"columns\" @queryTable=\"getList\" :defaultHideColumns.sync=\"defaultHideColumns\"></right-toolbar>\r\n                </el-row>\r\n                <el-table v-loading=\"listLoading\" :data=\"list\" size=\"mini\" element-loading-text=\"Loading\" fit border highlight-current-row>\r\n                    <el-table-column align=\"center\" label=\"序号\" width=\"95\" sortable>\r\n                        <template slot-scope=\"scope\">\r\n                            {{ (listQuery.pageIndex - 1 ) * listQuery.pageSize + scope.$index + 1 }}\r\n                        </template>\r\n                    </el-table-column>\r\n                    <#list table.fields as field>\r\n                    <#if field.propertyType == \"Date\" || \"LocalDateTime\" == field.propertyType>\r\n                    <el-table-column label=\"${field.comment}\" align=\"center\" v-if=\"columns[${field_index}].visible\" >\r\n                        <template slot-scope=\"scope\">\r\n                            <span>{{scope.row.${field.propertyName}}}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <#elseif field.propertyName == \'validState\'>\r\n                        <el-table-column label=\"状态\" prop=\"${field.propertyName}\" align=\"center\" v-if=\"columns[${field_index}].visible\">\r\n                            <template slot-scope=\"scope\">\r\n                                <el-tag :type=\"scope.row.${field.propertyName} | statusFilter\">\r\n                                    <span>{{ statusMap[scope.row.${field.propertyName}]}}</span>\r\n                                </el-tag>\r\n                            </template>\r\n                        </el-table-column>\r\n                    <#else>\r\n                    <el-table-column label=\"<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\" prop=\"${field.propertyName}\" align=\"center\" v-if=\"columns[${field_index}].visible\" sortable :show-overflow-tooltip=\"true\" ></el-table-column>\r\n                    </#if>\r\n                    </#list>\r\n                    <el-table-column align=\"center\" label=\"操作\" fixed=\"right\" min-width=\"180px\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button size=\"mini\" type=\"primary\" @click=\"handleUpdate(scope.row)\" icon=\"el-icon-edit\" plain v-waves>编辑</el-button>\r\n                            <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\" icon=\"el-icon-delete\" plain v-waves>禁用</el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <!-- 分页 -->\r\n                <div class=\"page-footer\">\r\n                    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.pageIndex\" :limit.sync=\"listQuery.pageSize\" style=\"float:right;\" @pagination=\"getList\" />\r\n                </div>\r\n            </div>\r\n\r\n            <el-dialog :title=\"titleMap[dialogStatus]\" :visible.sync=\"dialogVisible\" width=\"40%\" @close=\"handleDialogClose\">\r\n                <el-form ref=\"dataForm\" :model=\"form\" :rules=\"rules\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                    <#list table.fields as field>\r\n                     <#--<#if field.propertyName != \'operatorId\' && field.propertyName != \'operatorName\' && field.propertyName != \'createTime\' && field.propertyName != \'updateTime\'>-->\r\n                         <el-form-item v-if=\"<#if field.customMap[\'customFieldInfo\'][\'insertFlag\']?? && field.customMap[\'customFieldInfo\'][\'insertFlag\'] == 1 >true<#else>false</#if>\" label=\"<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>:\" prop=\"${field.propertyName}\">\r\n                     <#--</#if>-->\r\n                        <#if field.keyFlag>\r\n                            <el-input v-model=\"form.${field.propertyName}\" disabled></el-input>\r\n                        <#--<#elseif field.propertyName == \'operatorId\' || field.propertyName == \'operatorName\' || field.propertyName == \'createTime\' || field.propertyName == \'updateTime\'>-->\r\n\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'textarea\' >\r\n                         <el-input type=\"textarea\" v-model=\"form.${field.propertyName}\" autosize  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?length gt 1> :maxlength=\"${field.customMap[\'customFieldInfo\'][\'validateMaxLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?length gt 1> :minlength=\"${field.customMap[\'customFieldInfo\'][\'validateMinLength\']}\" </#if>\r\n                         ></el-input>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'select \' >\r\n                      <el-select v-model=\"form.${field.propertyName}\" placeholder=\"请选择\">\r\n                          <el-option key=\"深圳\" label=\"选项1\" value=\"深圳\"> </el-option>\r\n                          <el-option key=\"上海\" label=\"选项2\" value=\"上海\"> </el-option>\r\n                      </el-select>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'radio\' >\r\n                          <el-radio-group v-model=\"form.${field.propertyName}\" >\r\n                              <el-radio :label=\"3\">备选项</el-radio>\r\n                              <el-radio :label=\"6\">备选项</el-radio>\r\n                              <el-radio :label=\"9\">备选项</el-radio>\r\n                          </el-radio-group>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch\' >\r\n                         <el-switch v-model=\"form.${field.propertyName}\"></el-switch>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch(0,1)\' >\r\n                         <el-switch v-model=\"form.${field.propertyName}\"  :active-value=\"1\" :inactive-value=\"0\"></el-switch>\r\n                     <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'checkbox\' >\r\n                        <el-checkbox-group v-model=\"form.${field.propertyName}\">\r\n                            <el-checkbox label=\"复选框 A\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 B\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 C\"></el-checkbox>\r\n                        </el-checkbox-group>\r\n                      <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'editor\' >\r\n                             <QuillEditor  v-model=\"form.${field.propertyName}\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']}<#else>${field.comment}</#if>\"/>\r\n                     <#else >\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'date\' >\r\n                         <el-date-picker v-model=\"form.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'time\' >\r\n                         <el-time-select v-model=\"form.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-time-select>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'datetime\' >\r\n                         <el-date-picker v-model=\"form.${field.propertyName}\"  type=\"datetime\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#else >\r\n                         <el-input v-model=\"form.${field.propertyName}\"  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?length gt 1> :maxlength=\"${field.customMap[\'customFieldInfo\'][\'validateMaxLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?length gt 1> :minlength=\"${field.customMap[\'customFieldInfo\'][\'validateMinLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxValue\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxValue\']?length gt 1> :max=\"${field.customMap[\'customFieldInfo\'][\'validateMaxValue\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinValue\']?? && field.customMap[\'customFieldInfo\'][\'validateMinValue\']?length gt 1> :min=\"${field.customMap[\'customFieldInfo\'][\'validateMinValue\']}\" </#if>\r\n                         ></el-input>\r\n                             </#if>\r\n                     </#if>\r\n                         </el-form-item>\r\n                   </#list>\r\n                </el-form>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"dialogVisible = false\" v-waves>取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"submitForm\" v-waves>确 定</el-button>\r\n                </span>\r\n            </el-dialog>\r\n\r\n            <el-dialog :title=\"titleMap[dialogStatus]\" :visible.sync=\"updateDialogVisible\" width=\"40%\" @close=\"handleDialogClose\">\r\n                <el-form ref=\"updateDataForm\" :model=\"updateForm\" :rules=\"updateRules\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                    <#list table.fields as field>\r\n                     <#--<#if field.propertyName != \'operatorId\' && field.propertyName != \'operatorName\' && field.propertyName != \'createTime\' && field.propertyName != \'updateTime\'>-->\r\n                         <el-form-item v-if=\"<#if field.customMap[\'customFieldInfo\'][\'updateFlag\']?? && field.customMap[\'customFieldInfo\'][\'updateFlag\'] == 1 >true<#else>false</#if>\" label=\"<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>:\" prop=\"${field.propertyName}\">\r\n                     <#--</#if>-->\r\n                         <#if field.keyFlag>\r\n                            <el-input v-model=\"updateForm.${field.propertyName}\" disabled></el-input>\r\n                         <#--<#elseif field.propertyName == \'operatorId\' || field.propertyName == \'operatorName\' || field.propertyName == \'createTime\' || field.propertyName == \'updateTime\'>-->\r\n\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'textarea\' >\r\n                         <el-input type=\"textarea\" v-model=\"updateForm.${field.propertyName}\" autosize  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?length gt 1> :maxlength=\"${field.customMap[\'customFieldInfo\'][\'validateMaxLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?length gt 1> :minlength=\"${field.customMap[\'customFieldInfo\'][\'validateMinLength\']}\" </#if>\r\n                         ></el-input>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'select \' >\r\n                      <el-select v-model=\"updateForm.${field.propertyName}\" placeholder=\"请选择\">\r\n                          <el-option key=\"深圳\" label=\"选项1\" value=\"深圳\"> </el-option>\r\n                          <el-option key=\"上海\" label=\"选项2\" value=\"上海\"> </el-option>\r\n                      </el-select>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'radio\' >\r\n                          <el-radio-group v-model=\"updateForm.${field.propertyName}\" >\r\n                              <el-radio :label=\"3\">备选项</el-radio>\r\n                              <el-radio :label=\"6\">备选项</el-radio>\r\n                              <el-radio :label=\"9\">备选项</el-radio>\r\n                          </el-radio-group>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'editor\' >\r\n                             <QuillEditor  v-model=\"updateForm.${field.propertyName}\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']}<#else>${field.comment}</#if>\"/>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch\' >\r\n                         <el-switch v-model=\"updateForm.${field.propertyName}\"></el-switch>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'switch(0,1)\' >\r\n                         <el-switch v-model=\"updateForm.${field.propertyName}\"  :active-value=\"1\" :inactive-value=\"0\"></el-switch>\r\n                         <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'checkbox\' >\r\n                        <el-checkbox-group v-model=\"listQuery.${field.propertyName}\">\r\n                            <el-checkbox label=\"复选框 A\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 B\"></el-checkbox>\r\n                            <el-checkbox label=\"复选框 C\"></el-checkbox>\r\n                        </el-checkbox-group>\r\n                         <#else >\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'date\' >\r\n                         <el-date-picker v-model=\"updateForm.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'time\' >\r\n                         <el-time-select v-model=\"updateForm.${field.propertyName}\"  type=\"date\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-time-select>\r\n                             <#elseif field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formType\'] == \'datetime\' >\r\n                         <el-date-picker v-model=\"updateForm.${field.propertyName}\"  type=\"datetime\" placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"></el-date-picker>\r\n                             <#else >\r\n                         <el-input v-model=\"updateForm.${field.propertyName}\"  placeholder=\"请输入<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\"\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?length gt 1 > :maxlength=\"${field.customMap[\'customFieldInfo\'][\'validateMaxLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinLength\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxLength\']?length gt 1> :minlength=\"${field.customMap[\'customFieldInfo\'][\'validateMinLength\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxValue\']?? && field.customMap[\'customFieldInfo\'][\'validateMaxValue\']?length gt 1> :max=\"${field.customMap[\'customFieldInfo\'][\'validateMaxValue\']}\" </#if>\r\n                             <#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'validateMinValue\']?? && field.customMap[\'customFieldInfo\'][\'validateMinValue\']?length gt 1> :min=\"${field.customMap[\'customFieldInfo\'][\'validateMinValue\']}\" </#if>\r\n                         ></el-input>\r\n                             </#if>\r\n                         </#if>\r\n                         </el-form-item>\r\n                    </#list>\r\n                </el-form>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"updateDialogVisible = false\" v-waves>取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"submitForm\" v-waves>确 定</el-button>\r\n                </span>\r\n            </el-dialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { get${entity}ListPage, save${entity},update${entity}, deleteById,download } from \"@/api/${table.entityPath}\";\r\n    import waves from \'@/directive/waves\'\r\n    import Pagination from \'@/components/Pagination\'\r\n\r\n    export default {\r\n        components: { Pagination},\r\n        directives: { waves },\r\n        filters: {\r\n            statusFilter(status) {\r\n                const statusMap = {\r\n                    0: \'info\',\r\n                    1: \'success\'\r\n                }\r\n                return statusMap[status]\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                showSearch: true,\r\n                //默认查询隐藏列\r\n                defaultHideColumns: [\r\n                   <#if (cfg.listHideFields ? exists) >\r\n                       <#list cfg.listHideFields as field>\r\n                    \'${field.propertyName}\'<#if field_has_next >,</#if>\r\n                       </#list>\r\n                   </#if>\r\n                ],\r\n                // 列信息\r\n                columns: [\r\n                    <#list table.fields as field>\r\n                    { key: ${field_index},value: \'${field.propertyName}\', label: \'${field.comment}\', visible: true }<#if field_has_next>,</#if>\r\n                    </#list>\r\n                 ],\r\n                dialogVisible: false,\r\n                updateDialogVisible: false,\r\n                list: [],\r\n                listLoading: true,\r\n                total: 0,\r\n                listQuery: {\r\n                    pageIndex: 1,\r\n                    pageSize: 10,\r\n                 <#if (cfg.queryFields ? exists) >\r\n                     <#list cfg.queryFields as field>\r\n                    <#if field.queryMethod == \"BETWEEN\">\r\n                        ${field.propertyName}Start: undefined,\r\n                        ${field.propertyName}End: undefined <#if field_has_next >,</#if>\r\n                       <#else >\r\n                           ${field.propertyName}: undefined <#if field_has_next >,</#if>\r\n                    </#if>\r\n                     </#list>\r\n                 </#if>\r\n            },\r\n            input: \'\',\r\n                    form: {\r\n            <#list table.fields as field>\r\n                <#if field.propertyName == \'validState\'>\r\n                    ${field.propertyName}: 1, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                <#else>\r\n                    ${field.propertyName}: undefined, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                </#if>\r\n                <#--${field.propertyName}: ${((field.customMap[\'DEFAULT\']!\'\')?length>0)?string((field.customMap[\'DEFAULT\']!\'\'),\"undefined\")}, //${field.comment}-->\r\n            </#list>\r\n            },\r\n            updateForm: {\r\n            <#list table.fields as field>\r\n                <#if field.propertyName == \'validState\'>\r\n                    ${field.propertyName}: 1, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                <#else>\r\n                    ${field.propertyName}: undefined, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                </#if>\r\n            <#--${field.propertyName}: ${((field.customMap[\'DEFAULT\']!\'\')?length>0)?string((field.customMap[\'DEFAULT\']!\'\'),\"undefined\")}, //${field.comment}-->\r\n            </#list>\r\n            },\r\n            dialogStatus: \"\",\r\n            titleMap: {\r\n                update: \"编辑\",\r\n                create: \"创建\"\r\n            },\r\n            statusMap: { 1: \'正常\', 0: \'停用\' },\r\n            rules: {\r\n               <#list table.fields as field>\r\n                   ${field.propertyName}:[\r\n                   <#if field.customMap[\'validate\']?? && (field.customMap[\'validate\']?size > 0)>\r\n                       <#list field.customMap[\'validate\'] as validate>\r\n                           <#if (validate)?exists >\r\n                               ${validate} <#if validate_has_next>,</#if>\r\n                           </#if>\r\n                       </#list>\r\n                   </#if >\r\n                   ]<#if field_has_next>,</#if>\r\n               </#list>\r\n            },\r\n            updateRules: {\r\n                <#list table.fields as field>\r\n                    ${field.propertyName}:[\r\n                    <#if field.customMap[\'validate\']?? && (field.customMap[\'validate\']?size > 0)>\r\n                    <#list field.customMap[\'validate\'] as validate>\r\n                        <#if (validate)?exists >\r\n                            ${validate} <#if validate_has_next>,</#if>\r\n                        </#if>\r\n                    </#list>\r\n                    </#if >\r\n                   ]<#if field_has_next>,</#if>\r\n                </#list>\r\n            }\r\n        }\r\n        },\r\n        created() {\r\n            this.getList();\r\n        },\r\n        methods: {\r\n            getList() {\r\n                this.listLoading = true;\r\n                get${entity}ListPage(this.listQuery).then(response => {\r\n                    this.list = response.data.list;\r\n                this.total = response.data.total;\r\n                this.listLoading = false;\r\n                }).catch(err => {\r\n                    this.listLoading = false;\r\n                    console.log(err);\r\n                });\r\n            },\r\n						download() {\r\n                download(this.listQuery).then(response => {\r\n                \r\n                }).catch(err => {\r\n                    \r\n                    console.log(err);\r\n                });\r\n            },\r\n            handleCreate() {\r\n                this.resetForm();\r\n                this.dialogStatus = \"create\";\r\n                this.dialogVisible = true;\r\n            },\r\n            handleUpdate(row) {\r\n                this.updateForm = Object.assign({}, row);\r\n                this.dialogStatus = \"update\";\r\n                this.updateDialogVisible = true;\r\n            },\r\n            handleDelete(row) {\r\n                let _this = this;\r\n                _this.$confirm(\'确定删除吗?\', \'提示\', {\r\n                    confirmButtonText: \'确定\',\r\n                    cancelButtonText: \'取消\',\r\n                    type: \'warning\'\r\n                }).then(function () {\r\n            <#list table.fields as field>\r\n            <#if  (field.keyFlag) >\r\n                    let id = row.${field.propertyName};\r\n            </#if>\r\n            </#list>\r\n                deleteById(id).then(response => {\r\n                    if (response.code === 200) {\r\n                    this.getList();\r\n                    this.$messages.success(response.messages);\r\n                } else {\r\n                    this.$messages.error(response.messages);\r\n                }\r\n            });\r\n            })\r\n           },\r\n            submitForm() {\r\n                let _this = this;\r\n                let refForm = _this.dialogStatus === \"create\" ? \'dataForm\' : \'updateDataForm\'\r\n                _this.$refs[`<#noparse>${</#noparse>refForm<#noparse>}</#noparse>`].validate(valid => {\r\n                    if (valid) {\r\n                        this.$confirm(\'确定操作吗?\', \'提示\', {\r\n                            confirmButtonText: \'确定\',\r\n                            cancelButtonText: \'取消\',\r\n                            type: \'warning\'\r\n                        }).then(function () {\r\n                            if(_this.dialogStatus === \"create\"){\r\n                                save${entity}(_this.form).then(response => {\r\n                                    if (response.code === 200) {\r\n                                    _this.getList();\r\n                                    _this.$messages.success(response.messages);\r\n                                    _this.dialogVisible = false;\r\n                                } else {\r\n                                    _this.$messages.error(response.messages);\r\n                                }\r\n                            }).catch(err => { console.log(err);  })\r\n\r\n                            } else {\r\n                                update${entity}(_this.updateForm).then(response => {\r\n                                    if (response.code === 200) {\r\n                                    _this.getList();\r\n                                    _this.$messages.success(response.messages);\r\n                                    _this.updateDialogVisible = false;\r\n                                } else {\r\n                                    _this.$messages.error(response.messages);\r\n                                }\r\n                            }).catch(err => { console.log(err);  })\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            resetForm() {\r\n                this.form = {\r\n            <#list table.fields as field>\r\n                <#if field.propertyName == \'validState\'>\r\n                    ${field.propertyName}: 1, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                <#else>\r\n                    ${field.propertyName}: undefined, //<#if field.customMap[\'customFieldInfo\']?? && field.customMap[\'customFieldInfo\'][\'formLabel\']?? >${field.customMap[\'customFieldInfo\'][\'formLabel\']} <#else>${field.comment}</#if>\r\n                </#if>\r\n            </#list>\r\n            }\r\n            },\r\n            // 监听dialog关闭时的处理事件\r\n            handleDialogClose(){\r\n                let refForm = this.dialogStatus === \"create\" ? \'dataForm\' : \'updateDataForm\'\r\n                if(this.$refs[[`<#noparse>${</#noparse>refForm<#noparse>}</#noparse>`]]){\r\n                    this.$refs[[`<#noparse>${</#noparse>refForm<#noparse>}</#noparse>`]].clearValidate(); // 清除整个表单的校验\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style  rel=\"stylesheet/scss\" lang=\"scss\">\r\n\r\n    .page-footer{\r\n        margin-top: 20px;\r\n        width: 100%;\r\n        height: 50px;\r\n    }\r\n    .filter-container {\r\n        padding-bottom: 10px;\r\n        .filter-item {\r\n            display: inline-block;\r\n            vertical-align: middle;\r\n            margin-bottom: 10px;\r\n        }\r\n    }\r\n</style>', `template_type`='0', `output_file_name`='/src/views/generator/%s/index.vue', `template_path`='/templates/index.ftl', `template_group_id`='1', `tenant_id`='', `remarks`='', `valid_state`='1', `operator_id`='0', `operator_name`='', `create_time`='2021-03-01 15:17:09', `update_time`='2021-03-11 16:28:23' WHERE (`template_id`='5');
